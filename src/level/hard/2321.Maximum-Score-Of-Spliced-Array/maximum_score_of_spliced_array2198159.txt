// https://leetcode.com/problems/maximum-score-of-spliced-array/solutions/2198159/rust-o-n-find-the-sum-of-the-largest-sum-contiguous-sub-array/

impl Solution {
    pub fn maximums_spliced_array(nums_0: Vec<i32>, nums_1: Vec<i32>) -> i32 {
        let mut diff_0 = vec![];
        let mut diff_1 = vec![];

        for i in 0..nums_0.len() {
            diff_0.push(nums_1[i] - nums_0[i]);
            diff_1.push(nums_0[i] - nums_1[i]);
        }

        let sum_0: i32 = Self::max_subarray(diff_0) + nums_0.into_iter().sum::<i32>();
        let sum_1: i32 = Self::max_subarray(diff_1) + nums_1.into_iter().sum::<i32>();


        std::cmp::max(sum_0, sum_1)
    }

    // Find the sum of the largest sum contiguous sub-array
    fn max_subarray(nums: Vec<i32>) -> i32 {
        let mut best_sum = 0;
        let mut curr_sum = 0;

        for n in nums {
            curr_sum = std::cmp::max(0, curr_sum + n);
            best_sum = std::cmp::max(best_sum, curr_sum);
        }

        best_sum
    }
}