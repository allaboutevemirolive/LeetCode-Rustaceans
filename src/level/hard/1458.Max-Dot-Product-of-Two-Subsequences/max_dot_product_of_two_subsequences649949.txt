// https://leetcode.com/problems/max-dot-product-of-two-subsequences/solutions/649949/rust-dp-solution-with-explanation-0ms/
impl Solution {
    pub fn max_dot_product(A: Vec<i32>, B: Vec<i32>) -> i32 {
        let m = A.len();
        let n = B.len();
        let mut dp = vec![-0x3f3f3f3f; n + 1];
        
        for i in 1..m + 1 {
            let old = dp.to_vec();
            for j in 1..n + 1 {
                dp[j] = max(old[j], dp[j]);
                dp[j] = max(old[j - 1], dp[j]);
                dp[j] = max(dp[j - 1], dp[j]);
                dp[j] = max(dp[j], max(old[j - 1], 0) + A[i - 1] * B[j - 1]);
            }
        }
        *dp.last().unwrap()
    }
}