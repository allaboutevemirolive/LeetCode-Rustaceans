// https://leetcode.com/problems/minimize-deviation-in-array/solutions/3223540/rust-binary-heap/
use std::collections::BinaryHeap;

impl Solution {
    pub fn minimum_deviation(nums: Vec<i32>) -> i32 {
        let mut smallest = i32::MAX;
        let mut heap = BinaryHeap::new();

        for v in nums {
            if v % 2 == 0 {
                smallest = smallest.min(v);
                heap.push(v);
            } else {
                smallest = smallest.min(2 * v);
                heap.push(2 * v);
            }
        }

        let mut res = i32::MAX;

        while let Some(mut curr) = heap.pop() {
            res = (res).min(curr - smallest);

            if curr % 2 == 0 {
                curr >>= 1;
                smallest = smallest.min(curr);
                heap.push(curr);
            } else {
                break;
            }
        }
        
        res
    }
}