// https://leetcode.com/problems/minimize-deviation-in-array/solutions/1042089/rust-priority-queue-solution/
use std::collections::BinaryHeap;

impl Solution {
    pub fn minimum_deviation(nums: Vec<i32>) -> i32 {
        let mut bh = nums
            .iter()
            .map(|&num| if num & 1 == 0 { num } else { num << 1 })
            .collect::<BinaryHeap<_>>();
        let mut min = *bh.iter().min().unwrap();
        let mut answer = std::i32::MAX;
        while let Some(max) = bh.pop() {
            answer = std::cmp::min(answer, max - min);
            if max & 1 == 0 {
                min = std::cmp::min(min, max >> 1);
                bh.push(max >> 1);
            } else {
                break;
            }
        }
        answer
    }
}