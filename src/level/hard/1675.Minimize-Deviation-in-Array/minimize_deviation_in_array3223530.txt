// https://leetcode.com/problems/minimize-deviation-in-array/solutions/3223530/rust-solution/
use std::collections::BinaryHeap;

impl Solution {
    pub fn minimum_deviation(nums: Vec<i32>) -> i32 {
        let mut heap = BinaryHeap::with_capacity(nums.len());
        let (mut min, mut ans) = (i32::MAX, i32::MAX);
        for mut num in nums {
            num = if num % 2 == 0 { num } else { num * 2 };
            min = i32::min(min, num);
            heap.push(num);
        }

        while let Some(mut v) = heap.pop()  {
            if v % 2 == 1 {
                return i32::min(ans, v - min);
            } else {
                ans = i32::min(ans, v - min);
                v /= 2;
                min = i32::min(min, v);
                heap.push(v);
            }
        }

        3 // Will never reach here
    }
}