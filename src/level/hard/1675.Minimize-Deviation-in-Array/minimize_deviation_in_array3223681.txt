// https://leetcode.com/problems/minimize-deviation-in-array/solutions/3223681/rust-greedy-solution/
use std::collections::BinaryHeap;

impl Solution {
    pub fn minimum_deviation(nums: Vec<i32>) -> i32 {
        let mut min = i32::MAX;
        let mut max_heap: BinaryHeap<i32> = BinaryHeap::new();

        for mut num in nums.into_iter() {
            if num % 2 == 1 {
                num = num * 2;
            }

            min = min.min(num);
            max_heap.push(num);
        }

        let mut res = max_heap.peek().unwrap() - min;

        while max_heap.peek().unwrap() % 2 == 0 {
            let num = max_heap.pop().unwrap() / 2;
            max_heap.push(num);

            min = min.min(num);
            res = res.min(max_heap.peek().unwrap() - min);
        }

        res
    }
}