// https://leetcode.com/problems/minimize-deviation-in-array/solutions/3223725/rust-binaryheap/
impl Solution {
    pub fn minimum_deviation(nums: Vec<i32>) -> i32 {
        use std::collections::BinaryHeap;
        use std::cmp::Reverse;

        let mut heap = BinaryHeap::with_capacity(nums.len());
        let mut min = i32::MAX;
        for mut x in nums {
            // make all value to even
            // then we only to devide the maximum by 2
            if x % 2 == 1 {
                x *= 2;
            }
            min = min.min(x);
            heap.push(x);
        }

        let mut ans = i32::MAX;

        while let Some(x) = heap.pop() {
            ans = ans.min(x - min);
            
            if x % 2 == 1 {
                break;
            }

            heap.push(x / 2);
            min = min.min(x / 2);
        }
        ans
    }
}