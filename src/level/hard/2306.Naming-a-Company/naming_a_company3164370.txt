// https://leetcode.com/problems/naming-a-company/solutions/3164370/go-rust-implementation-of-official-solution/
use std::collections::HashSet;
impl Solution {
    pub fn distinct_names(ideas: Vec<String>) -> i64 {
        match ideas
            .iter()
            .fold(vec![HashSet::new(); 26], |mut initial_group, idea| {
                initial_group[idea.as_bytes()[0] as usize - 'a' as usize].insert(&idea[1..]);
                initial_group
            }) {
            initial_group => (0..25).fold(0, |ans, i| {
                ((i + 1)..26).fold(ans, |ans, j| {
                    match initial_group[i].iter().fold(0, |num_of_mutual, idea_a| {
                        match initial_group[j].contains(idea_a) {
                            true => num_of_mutual + 1,
                            false => num_of_mutual,
                        }
                    }) {
                        num_of_mutual => {
                            ans + 2
                                * (initial_group[i].len() as i64 - num_of_mutual)
                                * (initial_group[j].len() as i64 - num_of_mutual)
                        }
                    }
                })
            }),
        }
    }
}