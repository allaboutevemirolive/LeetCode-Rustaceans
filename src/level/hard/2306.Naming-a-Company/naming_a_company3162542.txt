// https://leetcode.com/problems/naming-a-company/solutions/3162542/rust-slow-solution/
use std::collections::{HashMap, HashSet};

impl Solution {
    pub fn distinct_names(ideas: Vec<String>) -> i64 {
        let mut hash: HashMap<char, HashSet<&str>> = HashMap::new();
        for s in ideas.iter() {
            let prefix = s.chars().next().unwrap();
            let suffix = &s[1..];
            hash.entry(prefix).or_insert(HashSet::new()).insert(suffix);
        }
        let v: Vec<char> = hash.keys().copied().collect();
        let mut ans = 0;
        for j in 1..v.len() {
            for i in 0..j {
                let set1 = hash.get(&v[i]).unwrap();
                let set2 = hash.get(&v[j]).unwrap();
                let a = set1.difference(&set2).count() as i64;
                let b = set2.difference(&set1).count() as i64;
                ans += a * b * 2;
            }
        }
        ans
    }
}