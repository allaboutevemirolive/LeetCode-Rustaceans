// https://leetcode.com/problems/longest-cycle-in-a-graph/solutions/3341649/rust/
impl Solution {
    pub fn longest_cycle(edges: Vec<i32>) -> i32 {
        let n = edges.len();
        let mut steps = vec![0; n];
        let mut ans = -1;

        'outer: for i in 0..n {
            if edges[i] > 0 && steps[i] == 0 {
                let mut j = i;
                let mut step = 1;
                let mut set = std::collections::HashSet::new();

                while steps[j] == 0 {
                    set.insert(j);
                    steps[j] = step;
                    step += 1;
                    if edges[j] == -1 {
                        continue 'outer;
                    }

                    j = edges[j] as usize;
                }
                if set.contains(&j) {
                    ans = ans.max(step - steps[j]);
                }
            }
        }
        ans
    }
}