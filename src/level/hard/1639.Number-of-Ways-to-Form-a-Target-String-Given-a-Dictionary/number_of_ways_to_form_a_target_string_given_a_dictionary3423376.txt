// https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary/solutions/3423376/shortest-rust-solution-one-dimention-dp-1001/
impl Solution {
    pub fn num_ways(w: Vec<String>, t: String) -> i32 {
        if t.len()>w[0].len() {return 0}
        let (mut c, mut dp) = ([[0;1000];26], [0;1001]); dp[0]=1;
        w.iter().map(|x| x.as_bytes().iter().enumerate().map(|(j,&ch)| c[ch as usize-97][j]+=1).count()).count();  
        for j in 0..w[0].len() {
            for (i, &x) in t.as_bytes().iter().take(j+1).enumerate().rev() {
                dp[i+1]=(dp[i+1]+dp[i]*c[x as usize-97][j] as isize)%1000000007;
            }
        }
        dp[t.len()] as i32
    }
}