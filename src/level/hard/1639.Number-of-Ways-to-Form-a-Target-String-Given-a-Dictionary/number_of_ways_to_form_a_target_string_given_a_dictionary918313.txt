// https://leetcode.com/problems/number-of-ways-to-form-a-target-string-given-a-dictionary/solutions/918313/rust-from-lee215-32ms-100/
impl Solution {
    pub fn num_ways(words: Vec<String>, target: String) -> i32 {
        const MOD: i64 = 1_000_000_007;
        let n = target.len();
        let mut ans = vec![0i64; n + 1];
        ans[0] = 1;
        for i in 0..words[0].len() {
            let mut count = [0; 26];
            for w in &words {
                count[(w.as_bytes()[i] - b'a') as usize] += 1;
            }
            for j in (0..n).rev() {
                ans[j + 1] += ans[j] * count[(target.as_bytes()[j] - b'a') as usize] % MOD;
            }
        }
        (ans[n] % MOD) as i32
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_num_ways() {
        assert_eq!(
            Solution::num_ways(
                vec!["acca".to_owned(), "bbbb".to_owned(), "caca".to_owned()],
                "aba".to_owned()
            ),
            6
        );
    }

    #[test]
    fn test_num_ways_02() {
        assert_eq!(
            Solution::num_ways(vec!["abba".to_owned(), "baab".to_owned()], "bab".to_owned()),
            4
        );
    }
}