// https://leetcode.com/problems/maximum-value-of-k-coins-from-piles/solutions/3418577/one-dimensional-dp-in-rust/
impl Solution {
    pub fn max_value_of_coins(piles: Vec<Vec<i32>>, k: i32) -> i32 {
        let k = k as usize;
        let mut dp = vec![0; k+1];
        let mut coin_count = 0;
        for pile in piles {
            coin_count += pile.len();
            for coins in (1..=k.min(coin_count)).rev() {
                let mut sum = 0;
                let mut max_sum = dp[coins];
                for (taken, coin) in pile.iter().enumerate().map(|(taken, &coin)| (taken+1, coin)) {
                    if taken > coins {
                        break;
                    }
                    sum += coin;
                    max_sum = max_sum.max(dp[coins-taken] + sum);
                }
                dp[coins] = max_sum;
            }
        }

        dp[k]
    }
}