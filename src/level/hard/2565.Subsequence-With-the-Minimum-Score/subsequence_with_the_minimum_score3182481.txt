// https://leetcode.com/problems/subsequence-with-the-minimum-score/solutions/3182481/rust-solution/
impl Solution {
    pub fn minimum_score(s: String, t: String) -> i32 {
        let (m, n) = (s.len(), t.len());
        let (s, t) = (s.chars().collect::<Vec<char>>(), t.chars().collect::<Vec<char>>());
        
        let (mut left, mut right) = (vec![0; m + 1], vec![0; m + 1]);
        let mut count = 0;
        
        for i in 0 .. m {
            if count < n && s[i] == t[count] { count += 1; }
            left[i + 1] = count;
        }
        
        count = 0;
        for i in (0 .. m).rev() {
            if count < n && s[i] == t[n - count - 1] { count += 1; }
            right[i] = count;
        }
        
        let mut ret = n as i32;
        for i in 0 ..= m {
            ret = ret.min(0.max(n as i32 - left[i] as i32 - right[i] as i32));
        }
        
        ret
    }
}