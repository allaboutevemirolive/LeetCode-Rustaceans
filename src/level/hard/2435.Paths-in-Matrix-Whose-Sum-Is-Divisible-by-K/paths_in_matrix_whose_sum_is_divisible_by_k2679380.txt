// https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k/solutions/2679380/rust-solution-dp/
impl Solution {
    pub fn number_of_paths(grid: Vec<Vec<i32>>, k: i32) -> i32 {
        let MOD = 1_000_000_007;

        let (m, n, k) = (grid.len(),  grid[0].len(), k as usize);
        let mut dp = vec![vec![vec![0; k]; n]; m];
        
        let it = grid[0][0] as usize % k;
        dp[0][0][it] = 1;

        for i in 0..m {            
            for j in 0..n {
                if i > 0 {
                    for it in 0..k {
                        let temp = (it + grid[i][j] as usize) % k;
                        dp[i][j][temp] = (dp[i][j][temp] + dp[i - 1][j][it]) % MOD;
                    }
                }

                if  j > 0 {
                    for it in 0..k {
                        let temp = (it + grid[i][j] as usize) % k;
                        dp[i][j][temp] = (dp[i][j][temp] + dp[i][j - 1][it]) % MOD;
                    }
                }
            }
        }
        
        dp[m - 1][n - 1][0]
    }
}