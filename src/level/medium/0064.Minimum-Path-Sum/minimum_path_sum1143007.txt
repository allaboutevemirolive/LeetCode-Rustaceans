// https://leetcode.com/problems/minimum-path-sum/solutions/1143007/rust-dp-solution/
impl Solution {
    pub fn min_path_sum(grid: Vec<Vec<i32>>) -> i32 {
        let (r_len, c_len) = (grid.len(), grid[0].len());
        let mut dp = vec![vec![0; c_len]; r_len];
        for i in 0..r_len {
            for j in 0..c_len {
                if i == 0 && j == 0 {
                    dp[i][j] = grid[i][j];
                } else if i == 0 {
                    dp[i][j] = grid[i][j] + dp[i][j - 1];
                } else if j == 0 {
                    dp[i][j] = grid[i][j] + dp[i - 1][j];
                } else {
                    if dp[i - 1][j] > dp[i][j - 1] {
                        dp[i][j] = grid[i][j] + dp[i][j - 1];
                    } else {
                        dp[i][j] = grid[i][j] + dp[i - 1][j];
                    }
                }
            }
        }
        dp[r_len - 1][c_len - 1]
    }
}