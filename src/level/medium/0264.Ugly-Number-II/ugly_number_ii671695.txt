// https://leetcode.com/problems/ugly-number-ii/solutions/671695/rust-100-ac-dp-using-vec-and-tuple/
impl Solution {
    pub fn nth_ugly_number(n: i32) -> i32 {
        let mut uglies: Vec<i32> = vec![1; n as usize];  // initialize a vector of repeated element(1) with fixed length(n).
        let mut p = (0, 0, 0);
        for i in 1..n {
            let nums = [2*uglies[p.0], 3*uglies[p.1], 5*uglies[p.2]];
            let curr = nums.iter().min().unwrap();
            uglies[i as usize] = *curr;

            if *curr == nums[0] {
                p.0 += 1;
            }
            if *curr == nums[1] {
                p.1 += 1;
            }
            if *curr == nums[2] {
                p.2 += 1;
            }
        }
        uglies[uglies.len() - 1]
    }
}