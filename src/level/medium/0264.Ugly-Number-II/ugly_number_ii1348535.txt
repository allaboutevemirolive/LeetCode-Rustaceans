// https://leetcode.com/problems/ugly-number-ii/solutions/1348535/rust-dp/
impl Solution {
     pub fn nth_ugly_number(n: i32) -> i32 {
        let n = n as usize;
        let (mut t2, mut t3, mut t5) = (0, 0, 0);
        let mut dp: Vec<i32> = vec![1; n];

        for i in 1..n {
            dp[i] = *vec![dp[t2] * 2, dp[t3] * 3, dp[t5] * 5]
                .iter()
                .min()
                .unwrap();
            if dp[i] == dp[t2] * 2 {
                t2 += 1;
            }
            if dp[i] == dp[t3] * 3 {
                t3 += 1;
            }
            if dp[i] == dp[t5] * 5 {
                t5 += 1;
            }
        }

        dp[n - 1]
    }
}