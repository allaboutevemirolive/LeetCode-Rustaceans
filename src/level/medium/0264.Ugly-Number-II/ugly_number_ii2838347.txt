// https://leetcode.com/problems/ugly-number-ii/solutions/2838347/python-and-rust-iterative-solution-97-and-100-faster/
def allUglyNumber(maxn: int) -> list:
    ls = [0]*maxn
    ls[0] = 1
    i2, i3, i5 = 0,0,0

    mul = [2,3,5]

    for i in range(1,maxn):
        ls[i] = min(mul)
        if ls[i] == mul[0]:
            i2 += 1
            mul[0] = ls[i2]*2
        if ls[i] == mul[1]:
            i3 += 1
            mul[1] = ls[i3]*3
        if ls[i] == mul[2]:
            i5 += 1
            mul[2] = ls[i5]*5
    return ls

allUN = allUglyNumber(1690)

class Solution:
    def nthUglyNumber(self, n: int) -> int:
        return allUN[n-1]
