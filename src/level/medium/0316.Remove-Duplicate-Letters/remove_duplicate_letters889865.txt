// https://leetcode.com/problems/remove-duplicate-letters/solutions/889865/short-elegant-rust-solution/

use std::collections::BTreeSet;
use std::iter::FromIterator;

fn remove_duplicate_letters_in_set(s: String, char_set: BTreeSet<char>) -> String {
    for ch in char_set.iter() {
        let mut char_set = char_set.clone();
        char_set.remove(ch);
        let s: String = (s.split_at(s.find(*ch).unwrap()).1).to_string();
        if char_set.is_subset(&BTreeSet::from_iter(s.chars())) {
            return format!("{}{}", ch, remove_duplicate_letters_in_set(s, char_set));
        }
    }
    "".to_string() // when the char_set is empty, return the empty string
}

impl Solution {
    pub fn remove_duplicate_letters(s: String) -> String {
        remove_duplicate_letters_in_set(s.clone(), BTreeSet::from_iter(s.chars()))
    }
}