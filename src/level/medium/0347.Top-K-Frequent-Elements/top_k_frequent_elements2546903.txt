// https://leetcode.com/problems/top-k-frequent-elements/solutions/2546903/rust-idiomatic-quick-select-solution/
use std::collections::HashMap;
impl Solution {
    pub fn top_k_frequent(nums: Vec<i32>, k: i32) -> Vec<i32> {
        let mut hm = HashMap::new();
        for &val in &nums {
            *hm.entry(val).or_insert(0) += 1;
        }
        let mut cnt: Vec<_> = hm.into_iter().collect();
        let n = cnt.len();
       
        cnt.select_nth_unstable_by_key(n - k as usize, |p| p.1);
        cnt.into_iter().rev().take(k as usize).map(|p| p.0).collect()
    }
}