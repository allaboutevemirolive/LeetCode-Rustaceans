// https://leetcode.com/problems/top-k-frequent-elements/solutions/2018821/rust-solution/
impl Solution {
    pub fn top_k_frequent(nums: Vec<i32>, k: i32) -> Vec<i32> {
        let mut map = std::collections::HashMap::new();
        for v in nums {
            *map.entry(v).or_insert(0) += 1;
        }
        
        let mut arr = map.into_iter().collect::<Vec<(i32,i32)>>();
        arr.sort_by(|a,b| a.1.cmp(&b.1));
        arr.reverse();
        let k = k as usize;
        let mut result = vec![0;k];
        for i in 0..k {
            result[i] = arr[i].0;
        }
        result
    }
}