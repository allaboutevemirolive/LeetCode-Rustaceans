// https://leetcode.com/problems/insert-interval/solutions/1543515/rust-o-n/

impl Solution {
    pub fn insert(intervals: Vec<Vec<i32>>, new_interval: Vec<i32>) -> Vec<Vec<i32>> {
        let mut result :Vec<Vec<i32>> = Vec::new();
        let mut merged = new_interval;
        let mut isMerged = false;
        for interval in intervals {
            if merged[1] < interval[0] && !isMerged {
                result.push(merged.clone());
                result.push(interval);
                isMerged = true 
            } else if interval[1] < merged[0] {
                result.push(interval); 
            } else if interval[0] > merged[1] {
                result.push(interval);
            } else if merged[0] <= interval[1] && !isMerged {
                merged[0] = cmp::min(merged[0], interval[0]);
                merged[1] = cmp::max(merged[1], interval[1]);
            }
        }
        
        if !isMerged {
            result.push(merged);
        }
        
        result
    }
}