// https://leetcode.com/problems/minimum-size-subarray-sum/solutions/1452635/rust-readable-solution-using-two-pointers/
impl Solution {
    pub fn min_sub_array_len(target: i32, nums: Vec<i32>) -> i32 {
        let mut best = usize::MAX;

        let mut sum = 0;
        let mut from = 0;
        let mut to = 0;

        while to < nums.len() {
            sum += nums[to];
            to += 1;

            while sum >= target {
                if sum - nums[from] >= target {
                    sum -= nums[from];
                    from += 1;
                } else {
                    best = best.min(to - from);
                    break;
                }
            }
        }

        if best == usize::MAX {
            best = 0;
        }
        best as i32
    }
}