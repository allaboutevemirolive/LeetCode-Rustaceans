// https://leetcode.com/problems/sort-characters-by-frequency/solutions/696239/rust-cheapest-best/
use std::collections::HashMap;

impl Solution {
    pub fn frequency_sort(s: String) -> String {
        let mut count_map = HashMap::new();
        s.chars().for_each(|c| *count_map.entry(c).or_insert(0) += 1);
        let mut counts = count_map.iter().collect::<Vec<(&char, &i32)>>();
        counts.sort_by(|(_, a), (_, b)| b.cmp(a));
        counts.iter().fold("".to_owned(), |mut acc, (c, n)| {
            acc.push_str(&vec![**c; **n as usize].iter().collect::<String>());
            acc
        })
    }
}