// https://leetcode.com/problems/sort-characters-by-frequency/solutions/2871309/rust-2ms-2-2-mb/
impl Solution {
    pub fn frequency_sort(s: String) -> String {
        use std::collections::HashMap;

        let mut map = HashMap::new();
        for chr in s.chars() {
            map.entry(chr).and_modify(|count| *count += 1).or_insert(1);
        }
        let mut map: Vec<_> = map.iter().map(|(chr, count)| (*chr, *count)).collect();
        map.sort_by(|a, b| b.1.cmp(&a.1));
        let mut result = String::new();
        for (chr, count) in map.iter() {
            for _ in 0..*count {
                result.push(*chr);
            }
        }
        result
    }
}