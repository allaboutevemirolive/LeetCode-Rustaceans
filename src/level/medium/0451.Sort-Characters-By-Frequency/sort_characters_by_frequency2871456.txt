// https://leetcode.com/problems/sort-characters-by-frequency/solutions/2871456/100-fast-rust-solution/
impl Solution {
    pub fn frequency_sort(s: String) -> String {
                let mut vec = Vec::with_capacity(26 + 26 + 10 + 100);

        (0..(26 + 26 + 10 + 100)).all(|i| {
            vec.push((i, 0));
            true
        });

        for ele in s.as_bytes() {
            vec[(*ele - b'0') as usize].1 += 1;
        }

        vec.sort_by(|a, b| b.1.partial_cmp(&a.1).unwrap());

        let mut s = String::from("");

        for (i, j) in vec {
            if j > 0 {
                s.push_str(String::from((i + b'0') as char).repeat(j).as_str());
            }
        }

        s

    }
}