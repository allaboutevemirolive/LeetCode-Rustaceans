// https://leetcode.com/problems/non-overlapping-intervals/solutions/3004203/rust-simple-sort-and-fold/
use std::cmp::Ordering;

impl Solution {
    pub fn erase_overlap_intervals(mut intervals: Vec<Vec<i32>>) -> i32 {
        intervals.sort_unstable_by(|a, b| match a[1].cmp(&b[1]) {
            Ordering::Equal => a[0].cmp(&b[0]),
            x => x,
        });
        // println!("{:?}", intervals);
        intervals
            .iter()
            .skip(1)
            .fold((0, intervals[0][1]), |(cnt, curr), interval| {
                if curr > interval[0] {
                    (cnt + 1, curr)
                } else {
                    (cnt, interval[1])
                }
            })
            .0
    }
}