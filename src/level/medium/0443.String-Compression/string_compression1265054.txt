// https://leetcode.com/problems/string-compression/solutions/1265054/rust-0ms/
impl Solution {
    pub fn compress(chars: &mut Vec<char>) -> i32 {
        
        if chars.len() == 1 {
            return 1;
        }
        
        let mut count = 0;
        let mut previous = chars[0];
        let mut result = vec![];
        for c in chars.iter() {
            if previous == *c {
                count += 1;
            }
            else {
                result.push(previous);
                
                if count > 1 {
                
                    let mut digits = vec![];

                    while count > 0 {
                        digits.push(((count % 10) + ('0' as u8)) as char);
                        count /= 10;
                    }        

                    for c in digits.iter().rev() {
                        result.push(*c);
                    }
                    
                }
                
                count = 1;
            }
            previous = *c;
        }
        
        if count > 0 {
            result.push(previous);
            
            if count > 1 {
            
                let mut digits = vec![];

                while count > 0 {
                    digits.push(((count % 10) + ('0' as u8)) as char);
                    count /= 10;
                }        

                for c in digits.iter().rev() {
                    result.push(*c);
                }
            }
        }
        
        *chars = result;
         chars.len() as i32
    }
}