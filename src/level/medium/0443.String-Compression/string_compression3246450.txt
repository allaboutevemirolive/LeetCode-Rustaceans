// https://leetcode.com/problems/string-compression/solutions/3246450/rust-simple-peekable/
impl Solution {
    pub fn compress(chars: &mut Vec<char>) -> i32 {
        let mut res = 0;
        let mut result = String::new();
        let mut pchars = chars.iter().peekable();
        let mut curr_count = 0;
        while let Some(curr) = pchars.next() {
            curr_count += 1;
            if pchars.peek() != Some(&curr) {
                res += 1;
                result.push(*curr);
                if curr_count > 1 {
                    res += 1 + f64::floor(f64::log10(curr_count as f64)) as i32;
                    result.push_str(&curr_count.to_string())
                }
                curr_count = 0;
            }
        }
        chars.clear();
        chars.extend::<Vec<char>>(result.chars().collect());
        res
    }
}