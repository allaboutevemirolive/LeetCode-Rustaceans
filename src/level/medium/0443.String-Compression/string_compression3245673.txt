// https://leetcode.com/problems/string-compression/solutions/3245673/rust/
impl Solution {
    pub fn compress(chars: &mut Vec<char>) -> i32 {
        let mut pre = chars[0];
        let mut cnt = 1;
        let mut idx = 0;

        let n = chars.len();
        for i in 1..n {
            if pre != chars[i] {
                chars[idx] = pre;
                idx += 1;
                pre = chars[i];

                if cnt == 1 {
                    continue;
                }

                for j in cnt.to_string().chars() {
                    chars[idx] = j;
                    idx += 1;
                }
                cnt = 1;
            } else {
                cnt += 1;
            }
        }

        chars[idx] = pre;
        idx += 1;
        if cnt != 1 {
            for j in cnt.to_string().chars() {
                chars[idx] = j;
                idx += 1;
            }
        }

        idx as _
    }
}