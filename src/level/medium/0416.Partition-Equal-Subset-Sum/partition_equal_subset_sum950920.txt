// https://leetcode.com/problems/partition-equal-subset-sum/solutions/950920/rust-solution-1d-array/
impl Solution {
    pub fn can_partition(nums: Vec<i32>) -> bool {
        // 0-1 knapsack
        let t_sum = nums.iter().fold(0, |x,y| x+y);
        if t_sum % 2 == 1 {
            return false;
        }
        let seek = (t_sum / 2) as usize ;
        let mut dp = vec![false; seek + 1];
        dp[0] = true;
        for num in nums.iter() {
            let n2 = *num as usize;
            for i in (n2..=seek).rev() {
                let index = i as usize;
                dp[index] = dp[index] || dp[index-n2];
            }
            if dp[seek] {
                return true;
            }
        }
        false
    }
}