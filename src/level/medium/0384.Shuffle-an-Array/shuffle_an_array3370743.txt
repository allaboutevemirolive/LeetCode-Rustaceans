// https://leetcode.com/problems/shuffle-an-array/solutions/3370743/simple-rust-solution/
struct Solution {
	da: Vec<i32>,
}


use rand::{distributions::Uniform, Rng}; // 0.6.5
use std::mem::swap;

impl Solution {

	fn new(nums: Vec<i32>) -> Self {

		Solution {
			da: nums,
		}

	}

	fn reset(&mut self) -> Vec<i32> {
		return self.da.clone();    
	}

	fn shuffle(&mut self) -> Vec<i32> {
		let mut rng = rand::thread_rng();
		let mut cur = self.da.clone();

		for i in 0..cur.len(){
			let val = rng.gen_range(0,cur.len());
			cur.swap(i, val);
		}
		return cur;
	}
}