// https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/solutions/2367316/rust-with-binary-search-0ms/
impl Solution {
    pub fn kth_smallest(matrix: Vec<Vec<i32>>, k: i32) -> i32 {
        let n = matrix.len();
        let mut lo = matrix[0][0];
        let mut hi = matrix[n - 1][n - 1];
        while lo < hi {
            let mid = (lo + hi + 1) >> 1;
            let count = Self::count_smaller(mid, &matrix);
            if count < k {
                lo = mid;
            }
            else {
                hi = mid - 1;
            }
        }
        lo
    }

    fn count_smaller(x: i32, matrix: &Vec<Vec<i32>>) -> i32 {
        let n = matrix.len();
        let mut i = n - 1;
        let mut j = 0;
        let mut count = 0;
        while j < n {
            if matrix[i][j] < x {
                count += i + 1;
                j += 1;
            }
            else if i == 0 {
                break;
            }
            else {
                i -= 1;
            }
        }
        count as i32
    }
}