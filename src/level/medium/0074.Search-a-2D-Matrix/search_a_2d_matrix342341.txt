// https://leetcode.com/problems/search-a-2d-matrix/solutions/342341/rust-solution/
impl Solution {
    fn lower_bound(list: Vec<i32>, target: i32) -> usize {
        let mut size = list.len();
        if size == 0 {
            return 0;
        }
        let mut base = 0;
        while size > 1 {
            let half = size / 2;
            let mid = base + half;
            if target >= list[mid] {
                base = mid;
            }
            size -= half;
        }
        base
    }

    pub fn search_matrix(matrix: Vec<Vec<i32>>, target: i32) -> bool {
        if matrix.is_empty() {
            return false;
        }
        if matrix[0].is_empty() {
            return false;
        }

        let first_column = matrix.iter().map(|v| v[0]).collect();
        let row_idx = Self::lower_bound(first_column, target);
        matrix[row_idx].binary_search(&target).is_ok()
    }
}