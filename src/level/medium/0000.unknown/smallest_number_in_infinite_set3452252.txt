// https://leetcode.com/problems/smallest-number-in-infinite-set/solutions/3452252/rust-vector-solution/
struct SmallestInfiniteSet {
    set: Vec<i32>,
}

/** 
 * `&self` means the method takes an immutable reference.
 * If you need a mutable reference, change it to `&mut self` instead.
 */
impl SmallestInfiniteSet {

    fn new() -> Self {
        SmallestInfiniteSet {
            set: (1..=1000).collect()
        }
    }
    
    fn pop_smallest(&mut self) -> i32 {
        for (i, &num) in self.set.iter().enumerate() {
            if num != 0 {
                self.set[i] = 0;
                return num;
            }
        }

        -1
    }
    
    fn add_back(&mut self, num: i32) {
        self.set[num as usize - 1] = num;
    }
}