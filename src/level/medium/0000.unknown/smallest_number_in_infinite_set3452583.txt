// https://leetcode.com/problems/smallest-number-in-infinite-set/solutions/3452583/rust-elixir-ordered-set-solution/
use std::collections::BTreeSet;

struct SmallestInfiniteSet {
    set: BTreeSet<i32>,
}

impl SmallestInfiniteSet {
    fn new() -> Self {
        Self {
            set: BTreeSet::from([1]),
        }
    }
    
    fn pop_smallest(&mut self) -> i32 {
        let &ans = self.set.iter().next().unwrap();
        self.set.remove(&ans);
        if self.set.is_empty() {
            self.set.insert(ans + 1);
        }
        ans
    }
    
    fn add_back(&mut self, num: i32) {
        let &x = self.set.iter().next_back().unwrap();
        if num < x {
            self.set.insert(num);
        }
    }
}