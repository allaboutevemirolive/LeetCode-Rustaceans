// https://leetcode.com/problems/smallest-number-in-infinite-set/solutions/3452409/rust-horizon-ordered-set-11ms/
use std::collections::BTreeSet;

struct SmallestInfiniteSet {
    added: BTreeSet<i32>,
    horiz: i32,
}

impl SmallestInfiniteSet {

    fn new() -> Self {
        Self { added: BTreeSet::new(), horiz: 1 }
    }
    
    fn pop_smallest(&mut self) -> i32 {
        match self.added.iter().copied().next() {
            Some(n) => {
                self.added.remove(&n);
                n
            },
            _ => {
                self.horiz += 1;
                self.horiz - 1
            }
        }
    }
    
    fn add_back(&mut self, num: i32) {
        if num < self.horiz {
            self.added.insert(num);
        }
    }
}