// https://leetcode.com/problems/count-and-say/solutions/752119/rust-cheapest-best/
impl Solution {
    pub fn count_and_say(n: i32) -> String {
        match n {
            1 => "1".to_owned(),
            n => {
                Self::count_and_say(n - 1)
                    .chars()
                    .chain(['.'].iter().cloned())
                    .fold(("".to_owned(), 0u8, 'z'), |(s, n, last), c| {
                        if s.len() == 0 || last == c {
                            (format!("{}{}", s, c), n + 1, c)
                        } else {
                            (
                                format!(
                                    "{}{}{}{}",
                                    &s[0..s.len() - n as usize],
                                    n,
                                    last,
                                    match c {
                                        '.' => "".to_owned(),
                                        _ => c.to_string(),
                                    }
                                ),
                                1,
                                c,
                            )
                        }
                    })
                    .0
            }
        }
    }
}