// https://leetcode.com/problems/count-and-say/solutions/2717950/rust-0ms-dp/
pub fn count_and_say(n: i32) -> String {
	let mut say = vec![1u8];
	for _ in 1..n {
		let mut curr = say[0];
		let mut new_say = vec![1u8, curr];
		for j in 1..say.len() {
			if say[j] == curr {
				let curr_count = new_say.len()-2;
				new_say[curr_count] += 1;
			}
			else {
				curr = say[j];
				new_say.push(1u8);
				new_say.push(curr);
			}
		}
		say = new_say;
	}
	let mut res = "".to_string();
	for i in 0..say.len() {
		res.push((say[i] + '0' as u8) as char);
	}
	res
}