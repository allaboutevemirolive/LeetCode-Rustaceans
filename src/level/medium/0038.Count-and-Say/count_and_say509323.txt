// https://leetcode.com/problems/count-and-say/solutions/509323/concise-rust-solution/
impl Solution {
    pub fn count_and_say(n: i32) -> String {
        (2..=n).fold("1".to_string(), |x, _| {
            let mut last_ch = x.chars().next().unwrap();
            let mut cnt = 1;
            let mut ans = String::from("");
            x.chars().skip(1).chain(std::iter::once('$')).for_each(|ch| {
                if ch != last_ch {
                    ans.extend(format!("{}{}", cnt, last_ch).chars());
                    last_ch = ch;
                    cnt = 0;
                };
                cnt += 1;
            } );
            ans
        })
    }
}