// https://leetcode.com/problems/combination-sum-iv/solutions/2381035/rust-memoization/
impl Solution {
    pub fn combination_sum4(nums: Vec<i32>, target: i32) -> i32 {
        let mut dp = vec![-1; target as usize + 1];
        dp[0] = 1;
        Self::solve(&mut dp, &nums, target as usize)
    }
    
    fn solve(dp: &mut Vec<i32>, nums: &[i32], target: usize) -> i32 {
        if dp[target] == -1 {
            dp[target] = 0;
            for &x in nums.iter() {
                if x as usize <= target {
                    dp[target] += Self::solve(dp, nums, target - x as usize);
                }
            }
        }
        dp[target]
    }
}