// https://leetcode.com/problems/spiral-matrix/solutions/1813159/rust-100-faster/
    impl Solution {
        pub fn spiral_order(mut matrix: Vec<Vec<i32>>) -> Vec<i32> {
            let mut x=0;
            let mut y=0;
            let mut result=Vec::new();
            loop {
                while x>=0&&x<matrix.len()&&y>=0&&y<matrix[0].len() {
                    if matrix[x][y]==-200 {
                        break;
                    }
                    result.push(matrix[x][y]);
                    matrix[x][y] = -200;
                    y+=1;
                }
                x=x+1;
                y=y-1;
                while x>=0&&x<matrix.len()&&y>=0&&y<matrix[0].len() {
                    if matrix[x][y]==-200 {
                        break;
                    }
                    result.push(matrix[x][y]);
                    matrix[x][y]=-200;
                    x=x+1;
                }
                x=x-1;
                y=y-1;
                while x>=0&&x<matrix.len()&&y>=0&&y<matrix[0].len() {
                    if matrix[x][y]==-200 {
                        break;
                    }
                    result.push(matrix[x][y]);
                    matrix[x][y] = -200;
                    y-=1;
                }
                y=y+1;
                x=x-1;
                while x>=0&&x<matrix.len()&&y>=0&&y<matrix[0].len() {
                    if matrix[x][y]==-200 {
                        break;
                    }
                    result.push(matrix[x][y]);
                    matrix[x][y]=-200;
                    x=x-1;
                }
                x=x+1;
                y=y+1;
                if x<0||x>=matrix.len()||y<0||y>=matrix[0].len() {
                    break;
                }
                else if matrix[x][y]==-200 {
                    break;
                }
            }
            return result;
        }
    }