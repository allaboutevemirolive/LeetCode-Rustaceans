// https://leetcode.com/problems/spiral-matrix/solutions/3291088/rust-straightforward-solution/
impl Solution {
    pub fn spiral_order(matrix: Vec<Vec<i32>>) -> Vec<i32> {
        let (mut lr, mut tb,  mut rl, mut bt) = (0, 0, matrix[0].len()-1, matrix.len()-1);
        let mut res = vec![];
        while lr < rl && tb < bt {
            for i in lr..=rl {
                res.push(matrix[tb][i])
            }
            tb += 1;
            for i in tb..=bt {
                res.push(matrix[i][rl])
            }
            rl -= 1;
            for i in (lr..=rl).rev() {
                res.push(matrix[bt][i])
            }
            bt -= 1;
            for i in (tb..=bt).rev() {
                res.push(matrix[i][lr])
            }
            lr += 1;
        }
        if bt == tb && lr <= rl {
            for i in lr..=rl {
                res.push(matrix[tb][i])
            }
        }
        if tb < bt && lr == rl {
            for i in tb..=bt {
                res.push(matrix[i][lr])
            }
        }
        res
    }
}