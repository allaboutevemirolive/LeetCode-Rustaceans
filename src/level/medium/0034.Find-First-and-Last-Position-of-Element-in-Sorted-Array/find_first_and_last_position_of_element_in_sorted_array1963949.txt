// https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/solutions/1963949/rust-binary-search/
impl Solution {
    pub fn search_range(nums: Vec<i32>, target: i32) -> Vec<i32> {
        if nums.len() == 0 {
            return vec![-1, -1];
        }
        
        let (mut lo, mut hi) = (0, nums.len() - 1);
        while lo < hi {
            let mid = lo + (hi - lo) / 2;
            if nums[mid] >= target {
                hi = mid;
            } else {
                lo = mid + 1;
            }
        }
        
        if nums[lo] != target {
            return vec![-1, -1];
        }
        
        let mut res = vec![lo as i32];
        
        let (mut lo, mut hi) = (0, nums.len() - 1);
        while lo < hi {
            let mid = lo + (hi - lo) / 2 + 1;
            if nums[mid] <= target {
                lo = mid;
            } else {
                hi = mid - 1;
            }
        }
        
        res.push(lo as i32);
        res
    }
}