// https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/solutions/298046/rust-solution/
impl Solution {
    pub fn search_range(nums: Vec<i32>, target: i32) -> Vec<i32> {
        if nums.is_empty() {
            return vec![-1, -1];
        }

        let mut size = nums.len();

        let mut base = 0usize;
        while size > 1 {
            let half = size / 2;
            let mid = base + half;
            if nums[mid] <= target {
                base = mid;
            }
            size -= half;
        }
        if nums[base] == target {
            let mut start = base;
            while start > 0 && nums[start-1] == target {
                start -= 1;
            }
            let mut end = base;
            while end < nums.len() - 1 && nums[end+1] == target {
                end += 1;
            }
            return vec![start as i32, end as i32];
        }
        vec![-1, -1]  
    }
}