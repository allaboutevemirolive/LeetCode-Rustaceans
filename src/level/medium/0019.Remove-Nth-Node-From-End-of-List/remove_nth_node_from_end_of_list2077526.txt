// https://leetcode.com/problems/remove-nth-node-from-end-of-list/solutions/2077526/rust-typescript/
impl Solution {
    pub fn remove_nth_from_end(head: Option<Box<ListNode>>, n: i32) -> Option<Box<ListNode>> {
        
        let mut dummy = Box::new(ListNode { 
            next: head.clone(),
            val: 0
        });
        let (mut fast, mut slow) = (dummy.clone(), dummy.as_mut());
        /* 
            Move the fast node head of the slow node 
        */
        for _ in 0..n { 
            fast = fast.next.unwrap()
        }
        /* 
            As soon as the fast node reaches the end,
            move the slow pointer forward
        */
        while let Some(node) = fast.next.take() { 
            fast = node;
            slow = slow.next.as_mut().unwrap()
        }
        
        /*
            Skip the node to be deleted 
        */
        slow.next = slow.next.as_mut().unwrap().next.clone();
        return dummy.next 
    }
}