// https://leetcode.com/problems/integer-to-roman/solutions/1091481/rust-digit-solution/
impl Solution {
    pub fn int_to_roman(mut num: i32) -> String {   
        let ones = ['I', 'X', 'C', 'M'];
        let fives = ['V', 'L', 'D'];
        
        let mut digits = Vec::new();
        while num != 0 {
            digits.push(num % 10);
            num /= 10;
        }
        
        digits.into_iter().enumerate().rev().map(|(i, digit)| {
            match digit {
                1 => vec![ones[i]],
                2 => vec![ones[i]; 2],
                3 => vec![ones[i]; 3],
                4 => vec![ones[i], fives[i]],
                5 => vec![fives[i]],
                6 => vec![fives[i], ones[i]],
                7 => vec![fives[i], ones[i], ones[i]],
                8 => vec![fives[i], ones[i], ones[i], ones[i]],
                9 => vec![ones[i], ones[i+1]],
                _ => Vec::new(),
            }
        }).flatten().collect()
    }
}