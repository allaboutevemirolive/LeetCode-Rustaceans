// https://leetcode.com/problems/restore-ip-addresses/solutions/3079396/backtracking-solution-in-rust/
impl Solution {
    pub fn restore_ip_addresses(s: String) -> Vec<String> {
        fn solve(s: &str, ans: &mut Vec<String>, ip: &mut String, n: i32) {
            if n==0 {
                if s.len()==0 {
                    ip.truncate(ip.len()-1);
                    ans.push(ip.clone());
                }
                return;
            }
            for k in 1..=3 {
                if let Some(sub) = s.get(..k) {
                    if let Ok(num) = sub.parse::<i32>() {
                        if (k==2 && num<10) || (k==3 && num < 100) || num > 255 {
                            break;
                        }
                    }
                    let ip_len = ip.len();
                    ip.push_str(sub);
                    ip.push('.');
                    solve(&s[k..], ans, ip, n - 1);
                    ip.truncate(ip_len);
                }
            }
        }
        let (mut ans, mut ip) = (Vec::new(), String::new());
        solve(&s, &mut ans, &mut ip, 4);
        ans
    }
}