// https://leetcode.com/problems/combination-sum-iii/solutions/229261/my-rust-0ms-solution/
impl Solution {
    pub fn combination_sum3(k: i32, n: i32) -> Vec<Vec<i32>> {
        if let Some(result) = Self::sub_combination_sum3(k, n, 9) {
            result
        } else {
            vec![]
        }
    }
	
    fn sub_combination_sum3(k: i32, n: i32, l: i32) -> Option<Vec<Vec<i32>>> {
        if n < 1 {
            return None
        } else if k == 1 {
            return Some(vec![vec![n]])
        }
		
        let mut outputs: Vec<Vec<i32>> = Vec::new();
        for i in (1..=l).rev() {
            let mut output: Vec<Vec<i32>> = Vec::new();
            if let Some(results) = Self::sub_combination_sum3(k-1, n-i, i-1) {
                for mut result in results {
                    if result.iter().all(|&x| x < i) {
                        result.push(i);
                        output.push(result);
                    }
                }
                outputs.append(&mut output);
            }
        }
        if outputs.len() == 0 {
            None
        } else {
            Some(outputs)
        }
    }
}