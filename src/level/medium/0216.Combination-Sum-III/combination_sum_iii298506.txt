// https://leetcode.com/problems/combination-sum-iii/solutions/298506/my-rust-solution-in-0ms/
impl Solution {
    pub fn combination_sum3(k: i32, n: i32) -> Vec<Vec<i32>> {
        let mut solution: Vec<Vec<i32>> = vec![];
        let mut buffer: Vec<i32> = vec![];
        let max: i32 = 9;
        let start: i32 = 1;
        
        fn helper(max: i32, curr: i32, residual: i32, level: i32, mut buffer: &mut Vec<i32>, mut solution: &mut Vec<Vec<i32>>) {
            if level < 0 || residual < 0 || curr > max+1 {
                return;
            }
            if level == 0 && residual == 0 {
                let add = buffer.to_vec();
                solution.push(add);
                return;
            }
            for num in curr..=max {
                buffer.push(num);
                helper(max, num+1, residual - num, level - 1, &mut buffer, &mut solution);
                buffer.pop();
            }
        }
        
        helper(max, start, n, k, &mut buffer, &mut solution);
        
        solution
    }
}