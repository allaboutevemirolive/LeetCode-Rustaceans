// https://leetcode.com/problems/combination-sum-iii/solutions/3440944/rust-solution/
impl Solution {
    pub fn combination_sum3(k: i32, n: i32) -> Vec<Vec<i32>> {
        fn backtrack(num: i32, current: &mut Vec<i32>, k: usize, n: i32, ans: &mut Vec<Vec<i32>>) {
            if current.len() == k && current.iter().sum::<i32>() == n {
                ans.push(current.clone());
                return;
            }
            for i in num..=9 {
                current.push(i);
                backtrack(i + 1, current, k, n, ans);
                current.pop();
            }
        }
        let mut ans = vec![];
        backtrack(1, &mut vec![], k as usize, n, &mut ans);
        ans        
    }
}