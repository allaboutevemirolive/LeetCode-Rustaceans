// https://leetcode.com/problems/longest-increasing-subsequence/solutions/625082/idiomatic-rust-solution-beats-100/
impl Solution {
    pub fn length_of_lis(nums: Vec<i32>) -> i32 {
        if nums.len() <= 1 {
            return nums.len() as i32;
        }
        let mut answer = vec![nums[0]];
        for i in 1..nums.len() {
            match answer.binary_search(&nums[i]) {
                Ok(x) => (),
                Err(x) => {
                    if x == answer.len() {
                        answer.push(nums[i]);
                    } else {
                        answer[x] = nums[i];
                    }
                }
            }
        }
        answer.len() as i32
    }
}