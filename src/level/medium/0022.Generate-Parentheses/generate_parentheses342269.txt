// https://leetcode.com/problems/generate-parentheses/solutions/342269/rust-beats-100/
impl Solution {
        pub fn generate_parenthesis(n: i32) -> Vec<String> {
            let mut ret = Vec::new();
            if n == 0 {return {ret}}
            let mut path = String::new();
            Solution::gp_dfs(&mut ret,n,n,path);
            ret
        }

        fn gp_dfs(res:&mut Vec<String>,l:i32,r:i32,path:String){
            if l == 0 && r ==0 {
                res.push(path.to_string());
                return
            }
            if l > 0{
                Solution::gp_dfs(res,l-1,r,path.to_owned() + "(");
            }
            if l < r {
                Solution::gp_dfs(res,l,r-1,path + ")");
            }
        }
}