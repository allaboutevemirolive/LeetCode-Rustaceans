// https://leetcode.com/problems/generate-parentheses/solutions/225958/clean-rust-implementation/
fn helper(res: &mut Vec<String>, par: String, n: i32, m: i32) {
    if n == 0 && m == 0 {
        res.push(par);
        return;
    }

    if n > 0 { helper(res, par.clone() + &"(", n-1, m+1) };
    if m > 0 { helper(res, par.clone() + &")", n  , m-1) };
}


impl Solution {
    pub fn generate_parenthesis(n: i32) -> Vec<String> {
        let mut res: Vec<String> = Vec::new();
        helper(&mut res, String::from(""), n, 0);
        res
    }
}