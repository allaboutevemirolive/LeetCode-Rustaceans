// https://leetcode.com/problems/add-two-numbers/solutions/2283261/rust-solution/
impl Solution {
    pub fn add_two_numbers(l1: Option<Box<ListNode>>, l2: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        
        let mut ans = Box::new(ListNode::new(0));
        let mut cur = ans.as_mut();
        
        let mut cur1 = l1.as_ref().unwrap();
        let mut cur2 = l2.as_ref().unwrap();
        
        let mut carry = 0;
        let mut sum = cur1.val + cur2.val;
        
        if sum >= 10 {
            sum = sum - 10;
            carry = 1;
        }

        cur.next = Some(Box::new(ListNode::new(sum)));
        cur = cur.next.as_mut().unwrap();
        
        while cur1.next != None || cur2.next != None {
            sum = 0;
            if let Some(node1) = cur1.next.as_ref() {
                sum = sum + node1.val;
                cur1 = node1;
            }
            if let Some(node2) = cur2.next.as_ref() {
                sum = sum + node2.val;
                cur2 = node2;
            }
            
            sum = sum + carry;
            carry = 0;
            
            if sum >= 10 {
                sum = sum - 10;
                carry = 1;
            }
            
            cur.next = Some(Box::new(ListNode::new(sum)));
            cur = cur.next.as_mut().unwrap();
        }
        
        if carry == 1 {
            cur.next = Some(Box::new(ListNode::new(1)));
        }
        
        return ans.next;
        
    }
}