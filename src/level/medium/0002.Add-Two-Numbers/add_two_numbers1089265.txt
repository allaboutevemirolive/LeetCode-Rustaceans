// https://leetcode.com/problems/add-two-numbers/solutions/1089265/rust-4ms/
impl Solution {
    pub fn add_two_numbers(l1: Option<Box<ListNode>>, l2: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        let mut carried = 0;
        let mut next_1: Option<Box<ListNode>> = l1;
        let mut next_2: Option<Box<ListNode>> = l2;
        let mut result_values: Vec<i32> = vec![];

        loop {
            match (next_1, next_2) {
                (Some(left), Some(right)) => {
                    let sum = left.val + right.val + carried;
                    let digit = sum.rem_euclid(10);
                    carried = sum.div_euclid(10);
                    result_values.push(digit);
                    next_1 = left.next;
                    next_2 = right.next;
                },
                (Some(only), _) | (_, Some(only)) => {
                    let sum = only.val + carried;
                    let digit = sum.rem_euclid(10);
                    carried = sum.div_euclid(10);
                    result_values.push(digit);
                    next_1 = only.next;
                    next_2 = None;
                },
                _ => { break; }
            }
        }

        while carried > 0 {
            result_values.push(carried.rem_euclid(10));
            carried = carried.div_euclid(10);
        }
              
        let mut result: Option<Box<ListNode>> = None;
          
        for val in result_values.into_iter().rev() {
            result = Some(Box::new(ListNode { val, next: result }));
        }
        
        result
    }
}