// https://leetcode.com/problems/spiral-matrix-ii/solutions/2689973/rust-simple-with-directions/
impl Solution {
    pub fn generate_matrix(n: i32) -> Vec<Vec<i32>> {
        let n = n as usize;
        let mut matrix = vec![vec![0; n as usize]; n as usize];
        let dirs = [(0, 1), (1, 0), (0, -1), (-1, 0)];
        let mut dir_idx = 0;
        let mut row = 0;
        let mut col = 0;
        for x in 1..=n * n {
            matrix[row][col] = x as i32;

            row += dirs[dir_idx].0 as usize;
            col += dirs[dir_idx].1 as usize;
            if row >= n || col >= n || matrix[row][col] != 0 {
                row -= dirs[dir_idx].0 as usize;
                col -= dirs[dir_idx].1 as usize;
                dir_idx = (dir_idx + 1) % dirs.len();
                row += dirs[dir_idx].0 as usize;
                col += dirs[dir_idx].1 as usize;
            }
        }
        matrix
    }
}