// https://leetcode.com/problems/spiral-matrix-ii/solutions/386708/intuitive-rust-simulate-solution/
impl Solution {
    pub fn generate_matrix(n: i32) -> Vec<Vec<i32>> {
        let mut ans: Vec<Vec<i32>> = vec![vec![0; n as usize]; n as usize];
        // direction
        let mut dir = 0;
        let mut x: i32 = 0;
        let mut y: i32 = 0;
        let d = [[0 as i32, 1], [1, 0], [0, -1], [-1, 0]];
        
        for i in 0..n * n {
            ans[x as usize][y as usize] = i + 1;
            let nx = x + d[dir][0];
            let ny = y + d[dir][1];
            if nx < 0 || nx >= n || ny < 0 || ny >= n || ans[nx as usize][ny as usize] != 0 {
                // turn 90 deg
                dir = (dir + 1) % 4;
            }
            x += d[dir][0];
            y += d[dir][1];
        }
        
        ans
    }
}