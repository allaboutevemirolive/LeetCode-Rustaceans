// https://leetcode.com/problems/spiral-matrix-ii/solutions/1423507/rust-simple-solution/
impl Solution {
    pub fn generate_matrix(n: i32) -> Vec<Vec<i32>> {
        let dx: Vec<i32> = vec![0, 1, 0, -1];
        let dy: Vec<i32> = vec![1, 0, -1, 0];
        
        let mut arr = (0..n).fold(vec![], |mut acc, _| {
            acc.push(vec![0; n as usize]);
            acc
        });

        let (mut i, mut j, mut d) = (0i32, 0i32, 0usize);
        for m in 1..(n*n+1) {
            arr[i as usize][j as usize] = m;
            i = i + dx[d];
            j = j + dy[d];
            if i >= n || i < 0 || j >= n || j < 0 || arr[i as usize][j as usize] != 0 {
                i = i - dx[d];
                j = j - dy[d];
                d = (d + 1) % 4;
                i = i + dx[d];
                j = j + dy[d];
            }
        }
        return arr;
    }
}