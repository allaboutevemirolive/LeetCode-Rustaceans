// https://leetcode.com/problems/spiral-matrix-ii/solutions/3087973/simple-rust-solution/
impl Solution {
    pub fn generate_matrix(n: i32) -> Vec<Vec<i32>> {
        let directions = [(1, 0), (0, 1), (-1, 0), (0, -1)];
        let mut mat: Vec<Vec<i32>> = vec![vec![0; n as usize]; n as usize];

        let mut offset = n;
        let mut pos: (isize, isize) = (-1, 0);
        let mut v = 1;
        while offset > 0 {
            for (i, &d) in directions.iter().enumerate() {
                for i in 0..offset {
                    pos.0 += d.0;
                    pos.1 += d.1;
                    mat[pos.1 as usize][pos.0 as usize] = v;
                    v += 1
                }
                offset += (i as i32) % 2 - 1;
            }
        }

        mat
    }
}