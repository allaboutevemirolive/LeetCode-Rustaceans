// https://leetcode.com/problems/spiral-matrix-ii/solutions/1408739/rust-solution-exploring-all-directions/
    pub fn generate_matrix(n: i32) -> Vec<Vec<i32>> {
        let mut res = vec![vec![0; n as usize]; n as usize];
        let (mut i, mut j, mut cur) = (0, -1, 0);
        for (di, dj) in [(0, 1), (1, 0), (0, -1), (-1, 0)].into_iter().cycle() {
            if cur == n * n {
                break;
            }
            while i + di >= 0 && i + di < n
               && j + dj >= 0 && j + dj < n
               && res[(i + di) as usize][(j + dj) as usize] == 0 {
                cur += 1;
                i += di;
                j += dj;
                res[i as usize][j as usize] = cur;
            }
        }
        res
    }