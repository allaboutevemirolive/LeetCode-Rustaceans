// https://leetcode.com/problems/word-break/solutions/384066/rust-0ms-dp/
use std::collections::HashSet;

impl Solution {
    pub fn word_break(s: String, word_dict: Vec<String>) -> bool {
        let n = s.len();
        let mut pref_dp: Vec<bool> = vec![false; n + 1];
        pref_dp[0] = true;
        let mut dict: HashSet<String> = word_dict.into_iter().collect();
        for i in 1..=n {
            for j in (0..=i-1).rev() {
                if pref_dp[j] && dict.contains(&s[j..=i-1]) {
                    pref_dp[i] = true;
                    break;
                }
            }
        }
        pref_dp[n]
    }
}