// https://leetcode.com/problems/4sum-ii/solutions/2418935/rust-solution/
use std::collections::*;
impl Solution {
    pub fn four_sum_count(nums1: Vec<i32>, nums2: Vec<i32>, nums3: Vec<i32>, nums4: Vec<i32>) -> i32 {
        let n = nums1.len();
        let mut map12 = HashMap::new();
        let mut map34 = HashMap::new();
        
        for i in 0..n {
            let v1 = nums1[i];
            let v3 = nums3[i];
            for j in 0..n {
                let v2 = nums2[j];
                let v4 = nums4[j];
                *map12.entry(v1+v2).or_insert(0) += 1;
                *map34.entry(v3+v4).or_insert(0) += 1;
            }
        }

        let mut result = 0;
        for (val, num1) in map12 {
            if let Some(num2) = map34.get(&(-1 * val)) {
                result += num1 * num2;
            }
        }
        result
    }
}