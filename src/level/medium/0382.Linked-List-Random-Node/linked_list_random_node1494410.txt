// https://leetcode.com/problems/linked-list-random-node/solutions/1494410/rust-o-1-space/
use rand::{rngs::ThreadRng, Rng};
pub struct Solution {
    head: Option<Box<ListNode>>,
    len: usize,
    rng: ThreadRng,
}

impl Solution {
    pub fn new(head: Option<Box<ListNode>>) -> Self {
        Self {
            len: (0..).scan(&head, |node, _| {
                    node.as_deref().map(|next| *node = &next.next)
                })
                .fuse()
                .count(),
            rng: ThreadRng::default(),
            head,
        }
    }

    pub fn get_random(&mut self) -> i32 {
        (0..self.rng.gen_range(0, self.len))
            .fold(self.head.as_deref().unwrap(), |ptr, _| {
                ptr.next.as_deref().unwrap()
            })
            .val
    }
}