// https://leetcode.com/problems/queue-reconstruction-by-height/solutions/2041423/rust-o-n-logn-solution/
use std::cmp::*;

impl Solution {
  pub fn reconstruct_queue(mut people: Vec<Vec<i32>>) -> Vec<Vec<i32>> {
    let n = people.len();
    let mut result = vec![vec![];n];

    people.sort_by(|a,b| {
      let v = a[0].cmp(&b[0]);
      if v == Ordering::Equal {
        a[1].cmp(&b[1])
      } else {
        v
      }
    });

    for vals in people {
      let v = vals[0];
      let i = vals[1] + 1;
      let mut count = 0;

      for j in 0..n {
        if result[j].is_empty() {
          count += 1;
        } else if v <= result[j][0] {
          count += 1;
        }

        if count == i {
          result[j] = vec![v, i - 1];
          break
        }
      }
    }
    result
  }
}