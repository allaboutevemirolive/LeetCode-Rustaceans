// https://leetcode.com/problems/coin-change/solutions/315067/rust-dp-4ms-solution/
impl Solution {
    pub fn coin_change(coins: Vec<i32>, amount: i32) -> i32 {
        let mut dp = vec![amount + 1; (amount + 1) as usize];
        dp[0] = 0;

        for i in 1..=amount {
            for &coin in coins.iter() {
                if i >= coin {
                    dp[i as usize] = i32::min(dp[i as usize], dp[(i - coin) as usize] + 1);
                }
            }
        }
        let last = *dp.last().unwrap();
        if last > amount { return -1; } else { return last; }
    }
}