// https://leetcode.com/problems/coin-change/solutions/495504/rust-dp-solution/
impl Solution {
    pub fn coin_change(coins: Vec<i32>, amount: i32) -> i32 {
        let mut dp = vec![i32::max_value();(amount + 1) as usize];
        dp[0] = 0;
        for i in 1..(amount+1) {
            dp[i as usize] = coins
            .iter()
            .filter(|&&coin|coin<=i)
            .map(|&coin|{
                let need = dp[(i-coin) as usize];
                if need == i32::max_value(){
                    need
                }else{
                    need + 1
                }
            })
            .min()
            .unwrap_or(i32::max_value());
        }
        let result = dp[amount as usize];
        if result == i32::max_value(){
            -1
        }else{
            result
        }
    }
}