// https://leetcode.com/problems/coin-change/solutions/1864362/rust-dp/
impl Solution {
    pub fn coin_change(coins: Vec<i32>, amount: i32) -> i32 {
        let mut dp = vec![amount + 1; amount as usize + 1]; // amount + 1 > all number of coins
        dp[0] = 0; // base case
        for amount in 0..dp.len() {
            for coin in coins.iter() {
                let left_amount = amount as i32 - *coin;
                if left_amount < 0 {
                    continue;
                }
                dp[amount] = std::cmp::min(dp[amount], 1 + dp[left_amount as usize]);
            }
        }

        let res = dp[amount as usize];
        if res > amount {
            return -1;
        }
        res
    }
}