// https://leetcode.com/problems/can-i-win/solutions/1318781/rust-cheapest-best/
use std::collections::HashMap;

impl Solution {
    pub fn can_i_win(max_choosable_integer: i32, desired_total: i32) -> bool {
        let sum: i32 = (1..=max_choosable_integer).sum();
        let mut cache = HashMap::new();

        if desired_total < 2 {
            true
        } else if sum < desired_total {
            false
        } else {
            Self::go(max_choosable_integer, 0, desired_total, &mut cache)
        }
    }

    fn go(m: i32, key: i32, total: i32, cache: &mut HashMap<i32, bool>) -> bool {
        if let Some(result) = cache.get(&key) {
            *result
        } else if total <= 0 {
            false
        } else {
            for n in 1..=m {
                if key & (1 << n) == 0 && !Self::go(m, key | (1 << n), total - n, cache) {
                    cache.insert(key, true);
                    return true;
                }
            }
            cache.insert(key, false);
            false
        }
    }
}