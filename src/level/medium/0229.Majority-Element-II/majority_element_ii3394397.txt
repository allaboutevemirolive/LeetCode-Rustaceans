// https://leetcode.com/problems/majority-element-ii/solutions/3394397/rust-go-java-based-on-stefanpochmann-s-soltuion/
use std::collections::HashMap;

impl Solution {
    pub fn majority_element(nums: Vec<i32>) -> Vec<i32> {
        let counter = nums.iter().fold(HashMap::new(), |mut acc, &num| {
            *acc.entry(num).or_insert(0) += 1;
            if acc.len() == 3 {
                acc = acc
                    .iter()
                    .map(|(&key, &value)| (key, value - 1))
                    .filter(|&(_, value)| value > 0)
                    .collect();
            }
            acc
        });
        counter.into_keys().filter(|x| nums.iter().filter(|&y| x == y).count() > nums.len() / 3).collect()
    }
}