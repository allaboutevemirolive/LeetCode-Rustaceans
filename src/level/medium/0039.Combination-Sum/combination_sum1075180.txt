// https://leetcode.com/problems/combination-sum/solutions/1075180/rust-0ms/
    pub fn combination_sum(candidates: Vec<i32>, target: i32) -> Vec<Vec<i32>> {
        fn solve(candidates: &[i32], prev: Vec<i32>, target: i32, res: &mut Vec<Vec<i32>>) {
            if target == 0 {
                res.push(prev);
                return;
            }
            let last = prev.last().unwrap_or(&std::i32::MIN);
            for &num in candidates {
                if num >= *last  && target - num >= 0 {
                    let mut nums = prev.clone();
                    nums.push(num);
                    solve(candidates, nums, target - num, res);
                }
            }
        }
        let mut res = vec![];
        solve(&candidates, vec![], target, &mut res);
        res
    }