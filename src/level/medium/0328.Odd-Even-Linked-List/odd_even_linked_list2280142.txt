// https://leetcode.com/problems/odd-even-linked-list/solutions/2280142/rust-0ms-2-3mb/
impl Solution {
    pub fn odd_even_list(mut head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        if head.is_none() {
            return head;
        }
        let mut node_odd = head.as_deref_mut().unwrap().next.take();
        let mut tail_odd = &mut node_odd;

        let mut node_even = head;
        let mut tail_even = &mut node_even;
        while tail_even.is_some() || tail_odd.is_some() {
            if let Some(node) = tail_odd {
                if tail_even.is_none() {
                    break;
                }
                tail_even.as_deref_mut().unwrap().next = node.as_mut().next.take();
                tail_even = &mut tail_even.as_deref_mut().unwrap().next;
                

            }
            if let Some(node) = tail_even {
                if tail_odd.is_none() {
                    break;
                }
                tail_odd.as_deref_mut().unwrap().next = node.as_mut().next.take();
                tail_odd = &mut tail_odd.as_deref_mut().unwrap().next;
                 
            }

        }
        if tail_even.is_some() {
            tail_even.as_deref_mut().unwrap().next = node_odd;
        }else{
            *tail_even = node_odd;
        }
        node_even
    }
}