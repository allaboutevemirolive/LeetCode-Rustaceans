// https://leetcode.com/problems/odd-even-linked-list/solutions/2881827/rust-o-n-o-1-aux-space-beats-100/
impl Solution {
    pub fn odd_even_list(head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        let mut odd    = head;
        let mut even   = odd .as_mut().and_then(|n| n.next.take());
        let mut head   = even.as_mut().and_then(|n| n.next.take());
        let mut o_tail = &mut odd;
        let mut e_tail = &mut even;

        while let Some(mut o_node) = head.take() {
            head = o_node.next.take();
            
            o_tail.as_mut()?.next = Some(o_node);
            o_tail = &mut o_tail.as_mut()?.next;

            if let Some(mut e_node) = head.take() {
                head = e_node.next.take();

                e_tail.as_mut()?.next = Some(e_node);
                e_tail = &mut e_tail.as_mut()?.next;
            }
        }
        if let Some(o_node) = o_tail.as_mut() {
            o_node.next = even;
        }
        odd
    }
}