// https://leetcode.com/problems/odd-even-linked-list/solutions/1521646/rust-vec-solution-2-6-mb-100/
impl Solution {
    pub fn odd_even_list(mut head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        let (mut even, mut odd) = (vec![], vec![]);
        let mut i  = 1;
        
        while let Some(mut node) = head { 
            head = node.next.take();
            if i % 2 == 0 { 
                even.push(Some(node))
            } else { 
                odd.push(Some(node))
            }
            i +=1;
        } 
        let mut res = None; 
        while let Some(mut node) = even.pop() { 
            node.as_mut().unwrap().next = res;
            res = node
        }
        while let Some(mut node) = odd.pop() { 
            node.as_mut().unwrap().next = res;
            res = node
        }
        return res
    }
}