// https://leetcode.com/problems/reverse-integer/solutions/373946/rust-100/
impl Solution {
    pub fn reverse(x: i32) -> i32 {
        let mut arr = Vec::<i8>::new();
        let mut n = x;
        while n.abs() > 0 {
            let rem = (n % 10) as i8;
            n = n / 10;
            arr.push(rem);
        }
        arr.reverse();
        
        let mut res = 0i32;
        let mut p = 0u32;
        
        for digit in arr {
            let op = (digit as i32).checked_mul(10_i32.pow(p)).and_then(|r|res.checked_add(r));
            match op {
                Some(r) => {res = r; p += 1;}
                None => {return 0i32;}
            }
        }
        res
    }
}