// https://leetcode.com/problems/reverse-integer/solutions/1563067/rust-solution/
impl Solution {
    pub fn reverse(x: i32) -> i32 {
        let factor = if x < 0 {
            -1
        } else {
            1
        };
    
        let mut value = x.abs();
        let mut digits = Vec::new();
        
        while value > 0 {
            digits.push(value % 10);
            value = value / 10;
        }
        
        let mut result: i32 = 0;
        for (index, digit) in digits.iter().enumerate() {
            match digit.checked_mul(10_i32.pow((digits.len() - 1 - index) as u32)).and_then(|new_digit| result.checked_add(new_digit)) {
                Some(res) => result = res,
                None => return 0,
            }
        }
            

        result * factor
    }
}

// 123 -> 321
// 

