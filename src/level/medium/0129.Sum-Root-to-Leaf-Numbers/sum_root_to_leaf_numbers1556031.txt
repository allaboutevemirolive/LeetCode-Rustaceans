// https://leetcode.com/problems/sum-root-to-leaf-numbers/solutions/1556031/rust-simple-version/
use std::cell::RefCell;
use std::rc::Rc;
impl Solution {
    fn helper(node: Option<&Rc<RefCell<TreeNode>>>, val: i32) -> i32 {
        if let Some(n) = node {
            let node = n.borrow();
            let v = node.val + val * 10;
            if node.left.is_none() && node.right.is_none() {
                return v;
            }
            return Self::helper(node.left.as_ref(), v) + Self::helper(node.right.as_ref(), v);
        }
        0
    }
    pub fn sum_numbers(root: Option<Rc<RefCell<TreeNode>>>) -> i32 {
        Self::helper(root.as_ref(), 0)
    }
}