// https://leetcode.com/problems/range-sum-query-2d-immutable/solutions/3253997/rust-solution-using-prefix-sum/
struct NumMatrix {
  memo:Vec<Vec<i32>>,
}

impl NumMatrix {
  fn new(matrix: Vec<Vec<i32>>) -> Self {
    let n = matrix.len();
    let m = matrix[0].len();
    let mut memo = vec![vec![0;m+1];n+1];
    for i in 0..n {
      for j in 0..m {
        memo[i+1][j+1] = matrix[i][j] + memo[i+1][j] + memo[i][j+1] - memo[i][j];
      }
    }
    println!("{:?}", &memo);

    NumMatrix {memo}
  }
    
  fn sum_region(&self, row1: i32, col1: i32, row2: i32, col2: i32) -> i32 {
    let r1 = row1 as usize;
    let r2 = row2 as usize+1; 
    let c1 = col1 as usize;
    let c2 = col2 as usize+1;
    self.memo[r2][c2] + self.memo[r1][c1] - self.memo[r2][c1] - self.memo[r1][c2]
  }
}