// https://leetcode.com/problems/find-all-anagrams-in-a-string/solutions/3301769/rust-sliding-window/
impl Solution {
    pub fn find_anagrams(s: String, p: String) -> Vec<i32> {
        let mut result = vec![];
        let s = s.chars().collect::<Vec<_>>();
        let p = p.chars().collect::<Vec<_>>();

        let mut p_map = vec![0; 26];
        for &ch in &p {
            p_map[ch as usize - 'a' as usize] += 1;
        }

        let mut s_map = vec![0; 26];
        let mut start = 0;
        for end in 0..s.len() {
            s_map[s[end] as usize - 'a' as usize] += 1;
            if end - start + 1 == p.len() {
                if s_map == p_map {
                    result.push(start as i32);
                }
                s_map[s[start] as usize - 'a' as usize] -= 1;
                start += 1;
            }
        }
        result        
    }
}