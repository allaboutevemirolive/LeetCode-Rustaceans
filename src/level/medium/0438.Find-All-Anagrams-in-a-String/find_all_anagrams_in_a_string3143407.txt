// https://leetcode.com/problems/find-all-anagrams-in-a-string/solutions/3143407/rust-sliding-window/
impl Solution {
    pub fn find_anagrams(s: String, p: String) -> Vec<i32> {
        if s.len() < p.len() {
            return Vec::new();
        }

        let s: Vec<u8> = s.bytes().collect();
        let mut count = vec![0; 26];
        for (c1, c2) in s.iter().zip(p.bytes()) {
            count[(c1 - b'a') as usize] += 1;
            count[(c2 - b'a') as usize] -= 1;
        }

        let mut ans = Vec::new();
        if count.iter().all(|&x| x == 0) {
            ans.push(0);
        }
        for i in p.len()..s.len() {
            count[(s[i] - b'a') as usize] += 1;
            count[(s[i - p.len()] - b'a') as usize] -= 1;
            if count.iter().all(|&x| x == 0) {
                ans.push((i - p.len() + 1) as i32);
            }
        }
        ans
    }
}