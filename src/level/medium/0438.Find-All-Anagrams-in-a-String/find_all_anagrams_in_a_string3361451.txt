// https://leetcode.com/problems/find-all-anagrams-in-a-string/solutions/3361451/rust/
impl Solution {
    pub fn find_anagrams(s: String, p: String) -> Vec<i32> {
        let p_freq = &mut [0; 26];
        let w_freq = &mut [0; 26];
        let mut res: Vec<i32> = Vec::new();

        if s.len() < p.len() {
          return res
        }

        let win_len = p.len();
        let a_usize = 'a' as usize;
        let p: Vec<usize> = p.chars().map(|c| c as usize - a_usize).collect();
        let s: Vec<usize> = s.chars().map(|c| c as usize - a_usize).collect();

        for i in 0..p.len() {
          p_freq[p[i]] += 1;
          w_freq[s[i]] += 1;
        }
        if p_freq == w_freq {
          res.push(0);
        }

        for i in p.len()..s.len() {
          w_freq[s[i - win_len]] -= 1;
          w_freq[s[i]] += 1;
          
          if p_freq == w_freq {
            res.push((i - win_len + 1) as i32);
          }
        }

        res
    }
}