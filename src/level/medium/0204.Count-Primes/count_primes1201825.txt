// https://leetcode.com/problems/count-primes/solutions/1201825/rust-prime-sieve-of-eratosthenes/
impl Solution {
    pub fn count_primes(n: i32) -> i32 {
        if n < 2 {
            return 0;
        }
        
        let n = n as usize;
        let mut primes = vec![1; n];
        primes[0] = 0;
        primes[1] = 0;
        
        let mut val: usize = 2;
        while val * val < n {
            if primes[val] == 1 {
                for i in (val * val .. n).step_by(val) {
                    primes[i] = 0;
                }
            }
            val += 1;
        }
        
        primes.iter().sum()
    }
}