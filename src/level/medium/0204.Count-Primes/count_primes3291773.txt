// https://leetcode.com/problems/count-primes/solutions/3291773/rust-solution/
fn sieve(a:usize) -> i32 {
  let mut is_prime = vec![true;a+1];
  let mut count = 0;
  for i in 2..=a {
    if is_prime[i] {
      is_prime[i] = false;
      count += 1;
      for j in 2..=a/i {
        is_prime[i * j] = false;
      }
    }
  }
  count
}

impl Solution {
    pub fn count_primes(n: i32) -> i32 {
        if n <= 2 {
            0
        } else {
            sieve(n as usize - 1)
        }
    }
}