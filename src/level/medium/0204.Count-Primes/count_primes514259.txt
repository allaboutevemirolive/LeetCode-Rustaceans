// https://leetcode.com/problems/count-primes/solutions/514259/rust-single-pass-sieve-of-eratosthenes/
impl Solution {
    pub fn count_primes(n: i32) -> i32 {
        let n = n as usize;
        let mut composite = vec![false; n];
        let mut count = 0;
        for i in 2..n {
            if !composite[i] {
                count += 1;
                let mut multiple = i * i; // Skip i * 2, i * 3, ... i * (i - 1), as they have already been marked.
                while multiple < n {
                    composite[multiple] = true;
                    multiple += i;
                }
            }
        }
        count
    }
}