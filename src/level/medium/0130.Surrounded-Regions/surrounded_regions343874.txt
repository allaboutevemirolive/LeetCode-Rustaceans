// https://leetcode.com/problems/surrounded-regions/solutions/343874/rust-solution/
impl Solution {
    pub fn solve(board: &mut Vec<Vec<char>>) {
        for i in 0..board.len() {
            for j in 0..board[i].len() {
                if i == 0 || i == board.len() - 1 || j == 0 || j == board[i].len() - 1 {
                    Self::go(board, i, j);
                }
            }
        }

        for i in 0..board.len() {
            for j in 0..board[i].len() {
                if board[i][j] == 'O' {
                    board[i][j] = 'X';
                }
                if board[i][j] == 'M' {
                    board[i][j] = 'O';
                }
            }
        }
    }

    fn go(board: &mut Vec<Vec<char>>, i: usize, j: usize) {
        if board[i][j] != 'O' {
            return;
        }

        board[i][j] = 'M';
        if i > 0 && board[i - 1][j] == 'O' {
            Self::go(board, i - 1, j);
        }
        if j < board[i].len() - 1 && board[i][j + 1] == 'O' {
            Self::go(board, i, j + 1);
        }
        if i < board.len() - 1 && board[i + 1][j] == 'O' {
            Self::go(board, i + 1, j);
        }
        if j > 1 && board[i][j - 1] == 'O' {
            Self::go(board, i, j - 1);
        }
    }
}