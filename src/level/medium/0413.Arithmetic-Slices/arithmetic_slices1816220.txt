// https://leetcode.com/problems/arithmetic-slices/solutions/1816220/rust-solution/
impl Solution {
    pub fn number_of_arithmetic_slices(nums: Vec<i32>) -> i32 {
        if nums.len() < 3 {
            return 0;
        }

        let calc_num = |l: i32| -> i32 {
            match l >= 3 {
                true => (l - 2) * (l - 1) / 2, // sum(1..n) = n * (n + 1) / 2
                false => 0,
            }
        };
        let mut res = 0;
        let mut prev_delta = nums[1] - nums[0];
        let mut prev_x = nums[1];
        let mut l = 0;

        for &x in &nums[2..] {
            let delta = x - prev_x;
            match delta == prev_delta {
                true => l += 1,
                false => {
                    res += calc_num(l);
                    prev_delta = delta;
                    l = 2;
                }
            }
            prev_x = x;
        }
        res + calc_num(l)
    }
}