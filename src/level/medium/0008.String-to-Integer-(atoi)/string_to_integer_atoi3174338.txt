// https://leetcode.com/problems/string-to-integer-atoi/solutions/3174338/rust-iterators/
use std::ops::ControlFlow;

impl Solution {
    pub fn my_atoi(s: String) -> i32 {
        let mut it = s
            .chars()
            .skip_while(|char| char.is_ascii_whitespace())
            .peekable();
        let sign = match it.peek() {
            Some('-') => {
                it.next();
                -1
            }
            Some('+') => {
                it.next();
                1
            }
            _ => 1,
        };
        let num = it
            .take_while(|char| char.is_numeric())
            .try_fold(0, |acc: i32, char| {
                if let Some(acc) = acc.checked_mul(10) {
                    if let Some(acc) = acc.checked_add(char as i32 - 48) {
                        ControlFlow::Continue(acc)
                    } else {
                        ControlFlow::Break(i32::MAX)
                    }
                } else {
                    ControlFlow::Break(i32::MAX)
                }
            });
        match num {
            ControlFlow::Continue(num) => sign * num,
            ControlFlow::Break(_) => match sign {
                1 => i32::MAX,
                _ => i32::MIN,
            },
        }
    }
}