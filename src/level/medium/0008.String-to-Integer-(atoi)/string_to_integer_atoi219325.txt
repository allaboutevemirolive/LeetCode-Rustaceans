// https://leetcode.com/problems/string-to-integer-atoi/solutions/219325/rust-0ms/
impl Solution {
    pub fn my_atoi(input: String) -> i32 {
        let (i32_min, i32_max) = (-2_i64.pow(31), 2_i64.pow(31) - 1);
        let mut num_matched = false;
        let mut result: i64 = 0;
        let mut minus = false;
        for ch in input.chars().into_iter() {
            if !num_matched {
                match ch {
                    ' ' => {},
                    '0'...'9' => {
                        num_matched = true;
                        result = result * 10 + ch.to_digit(10).unwrap() as i64;
                    },
                    '-' => { num_matched = true; minus = true; }
                    '+' => { num_matched = true; }
                    _ => return 0
                }
            } else {
                match ch {
                    '0'...'9' => {
                        result = result * 10 + ch.to_digit(10).unwrap() as i64;
                        if result > i32_max {
                            break
                        }
                    },
                    _ => break
                }
            }
        }
        result = if minus { -result } else { result };
        if result > i32_max {
            return i32_max as i32;
        }
        if result < i32_min {
            return i32_min as i32;
        }
        return result as i32;
    }
}