// https://leetcode.com/problems/search-in-rotated-sorted-array/solutions/1010564/rust-binary-search-solution/
impl Solution {
    pub fn search(nums: Vec<i32>, target: i32) -> i32 {
        let (mut left, mut right) = (0, nums.len() - 1);
        while left <= right && right != std::usize::MAX {
            if nums[left] == target {
                return left as i32;
            } else if nums[right] == target {
                return right as i32;
            }
            
            let mid = (right + left) / 2;
            if nums[mid] == target {
                return mid as i32;
            }
            
            if nums[left] > nums[right] {
                left += 1;
                right -= 1;
            } else {
                if nums[mid] > target {
                    right = mid - 1;
                    left += 1;
                } else {
                    left = mid + 1;
                    right -= 1;
                }
            }
        }
        -1
    }
}