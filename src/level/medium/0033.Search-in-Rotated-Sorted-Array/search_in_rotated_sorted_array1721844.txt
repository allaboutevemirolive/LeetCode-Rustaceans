// https://leetcode.com/problems/search-in-rotated-sorted-array/solutions/1721844/rust/
    pub fn search(nums: Vec<i32>, target: i32) -> i32 {
        let mut s = 0;
        let mut e = nums.len() as i32 - 1;
        while (s <= e) {
            let m = (s + ((e - s) / 2));
            let mv = nums[m as usize];
            let sv = nums[s as usize];
            let ev = nums[e as usize];
            
            if mv == target {
                return m;
            }             
            
            if sv <= mv {
                //left half is sorted 
                
                //is it present in left half 
                if target >= sv && target <= mv {
                    e = m - 1
                } else {
                    s = m + 1
                }
                
            } else {
                //right half is sorted
                
                //is it present in right half
                if target >= mv && target <= ev {
                    s = m + 1
                } else {
                    e = m - 1
                }
            }
            
        }
        
        return -1;
    }