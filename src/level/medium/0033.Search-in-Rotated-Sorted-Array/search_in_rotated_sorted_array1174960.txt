// https://leetcode.com/problems/search-in-rotated-sorted-array/solutions/1174960/rust-solution/
impl Solution {
     pub fn search(nums: Vec<i32>, target: i32) -> i32 {
        
        if nums.is_empty() {
            return -1;
        }
        let (mut s, mut e) = (0, nums.len() - 1);
        while s + 1 < e {

            let mid = (e - s)/2 + s;

            if nums[mid] == target {
                return mid as i32;
            }
            match nums[mid] < nums[e] {
                true => {
                    match nums[mid] <= target && target <= nums[e] {
                        true => s = mid,
                        false => e = mid,
                    }
                }
                false => {
                    match nums[s] <= target && target <= nums[mid] {
                        true => e = mid,
                        false => s = mid,
                    }
                }
            }
        }
        if nums[s] == target {
            return s as i32;
        }
        if nums[e] == target {
            return e as i32;
        }
        return -1;
    }
}