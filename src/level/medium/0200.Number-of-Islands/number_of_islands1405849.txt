// https://leetcode.com/problems/number-of-islands/solutions/1405849/rust/
impl Solution {
    pub fn num_islands(mut grid: Vec<Vec<char>>) -> i32 {
        let rows = grid.len();
        let cols = grid[0].len();

        fn visit_island(grid: &mut Vec<Vec<char>>, i : i32, j : i32, rows : usize, cols : usize) {
            if i < 0 || i as usize >= rows || j < 0 || j as usize >= cols || grid[i as usize][j as usize] == '0' {
                return;
            }

            let x = i as usize;
            let y = j as usize;
        
            grid[x][y] = '0';
            visit_island(grid, i + 1, j, rows, cols);
            visit_island(grid, i, j + 1, rows, cols);
            visit_island(grid, i - 1, j, rows, cols);
            visit_island(grid, i, j - 1, rows, cols);
        }
        let mut island_count = 0;
       
        for i in 0 .. rows {
            for j in 0 .. cols {
                if grid[i][j] == '1' {
                     //println!("{}, {}", i, j);
                    island_count += 1;
                    visit_island(&mut grid, i as i32, j as i32, rows, cols);
                }
            }
        }
        return island_count;
    }
       
}