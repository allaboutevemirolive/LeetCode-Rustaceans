// https://leetcode.com/problems/number-of-islands/solutions/275659/rust-solution/
impl Solution {
    pub fn num_islands(mut grid: Vec<Vec<char>>) -> i32 {
        let mut count = 0;
        let rows = grid.len();
        if (rows == 0) {
            return count;
        }
        let cols = grid[0].len();
        for r in 0..rows {
            for c in 0..cols {
                if grid[r][c] == '1' {
                    count += 1;
                    find_adj(r, c, &mut grid);
                }
            }
        }
        count
    }
}

fn find_adj(r: usize, c: usize, grid: &mut Vec<Vec<char>>) {
    if grid[r][c] != '1' {
        return;
    };
    grid[r][c] = 'x';
    if (r > 0) {
        find_adj(r - 1, c, grid);
    }
    if (r < grid.len() - 1) {
        find_adj(r + 1, c, grid);
    }

    if (c > 0) {
        find_adj(r, c - 1, grid);
    }
    if (c < grid[0].len() - 1) {
        find_adj(r, c + 1, grid);
    }
}