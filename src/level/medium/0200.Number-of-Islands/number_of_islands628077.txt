// https://leetcode.com/problems/number-of-islands/solutions/628077/rust-dfs/
    let mut used = vec![vec![false; wid]; hei];
    let mut res = 0;
    for i in 0..hei{
        for j in 0..wid{
            if grid[i][j] == '1' && !used[i][j] {
                res += 1;
                Self::dfs(&grid, i, j, &mut used);  
            }
        }
    }
    res
}

fn dfs(grid: &Vec<Vec<char>>, i: usize, j: usize, used: &mut Vec<Vec<bool>>){
    if i >= grid.len() || j >= grid[0].len() || used[i][j]{
        return;
    }

    used[i][j] = true;

    if grid[i][j] == '0'{
       return; 
    }

    Self::dfs(grid, i+1, j, used);
    Self::dfs(grid, i-1, j, used);
    Self::dfs(grid, i, j+1, used);
    Self::dfs(grid, i, j-1, used);
}