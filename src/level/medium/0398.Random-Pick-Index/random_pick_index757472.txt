// https://leetcode.com/problems/random-pick-index/solutions/757472/rust-cheapest-best/
use rand::seq::SliceRandom;
use std::collections::HashMap;

struct Solution {
    pub map: HashMap<i32, Vec<i32>>,
}

impl Solution {
    fn new(mut nums: Vec<i32>) -> Self {
        let mut map = HashMap::new();
        for (i, n) in nums.into_iter().enumerate() {
            (*map.entry(n).or_insert(vec![])).push(i as i32);
        }

        Self { map }
    }

    fn pick(&self, target: i32) -> i32 {
        *self
            .map
            .get(&target)
            .unwrap()
            .choose(&mut rand::thread_rng())
            .unwrap()
    }
}