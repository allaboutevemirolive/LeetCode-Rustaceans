// https://leetcode.com/problems/house-robber-ii/solutions/1494213/rust-0ms-2mb/
use std::cmp::max;
impl Solution {
    pub fn rob(nums: Vec<i32>) -> i32 {
        let n = nums.len();
            
        if n == 0 {return 0}
        if n == 1 {return nums[0]}
        
        //  Skip first house, Skip the last house 
        // [2][2][3]
         Self::helper(&nums[0..n - 1]).max(Self::helper(&nums[1..n])) 
    }
    fn helper(nums: &[i32]) -> i32 { 
        let (mut h1, mut h2) = (0, 0);
        //  h1, h2, n, n+1...
        
        for n in nums { 
            let temp = max(n + h1, h2);
            h1 = h2;
            h2 = temp
        }
        h2
    }
}