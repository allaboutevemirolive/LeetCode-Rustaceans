// https://leetcode.com/problems/house-robber-ii/solutions/1116105/rust-cheapest-best/
impl Solution {
    pub fn rob(nums: Vec<i32>) -> i32 {
        match nums.len() {
            1 => nums[0],
            n => {
                let mut dp = vec![(nums[0], 0, 0, 0)];
                for i in 1..n - 1 {
                    dp.push((
                        dp[i - 1].0.max(dp[i - 1].1 + nums[i]),
                        dp[i - 1].0.max(dp[i - 1].1),
                        dp[i - 1].2.max(dp[i - 1].3 + nums[i]),
                        dp[i - 1].2.max(dp[i - 1].3),
                    ));
                }
                dp[n - 2].0.max(dp[n - 2].3 + nums[n - 1])
            }
        }
    }
}