// https://leetcode.com/problems/house-robber-ii/solutions/2005267/rust/
impl Solution {
    pub fn rob(nums: Vec<i32>) -> i32 {
        if nums.len() == 1 {
            nums[0]
        } else {
            Self::rob_impl(&nums[0..nums.len() - 1]).max(Self::rob_impl(&nums[1..]))
        }
    }

    // Same as House Robber I solution
    fn rob_impl(nums: &[i32]) -> i32 {
        if nums.len() < 3 {
            *nums.iter().max().unwrap()
        } else {
            nums
                .iter()
                .skip(3)
                .fold(
                    [nums[0], nums[1], nums[2] + nums[0]],
                    |[a, b, c], num| [b, c, num + b.max(a)]
                )
                .iter()
                .cloned()
                .max()
                .unwrap()
        }
    }
}