// https://leetcode.com/problems/house-robber-ii/solutions/1971402/rust-scan-array-2-times-o-n/
use std::cmp::max;

impl Solution {
    pub fn rob(nums: Vec<i32>) -> i32 {
        let mut ans = 0;
        let n = nums.len();
        if n == 1 {
            return nums[0]
        }
        
        let mut f = vec![0; n];
        // println!("{f:?}");
        f[0] = nums[0];
        
        for i in 0..n-1 {
            let mut a = 0;
            let mut b = 0;
            if i >= 1 {
                a = f[i-1]
            }
            if i >= 2 {
                b = f[i-2]
            }
            f[i] = max(a, b + nums[i]);
            ans = max(f[i], ans);
        }
        let mut f = vec![0; n];
        for i in 1..n {
            let mut a = 0;
            let mut b = 0;
            if i >= 1 {
                a = f[i-1]
            }
            if i >= 2 {
                b = f[i-2]
            }
            f[i] = max(a, b + nums[i]);
            ans = max(f[i], ans);
        }
        
        ans
    }
}