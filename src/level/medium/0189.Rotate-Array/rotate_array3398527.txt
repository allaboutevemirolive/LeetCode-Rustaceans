// https://leetcode.com/problems/rotate-array/solutions/3398527/learning-rust-i32-v-s-usize/
impl Solution {
    pub fn rotate(nums: &mut Vec<i32>, k: i32) {
        fn sub_rotate(nums: &mut Vec<i32>, mut start:i32, mut end:i32) {
            let mut tmp_value = 0;
            while start < end {
                tmp_value = nums[start as usize];
                nums[start as usize] = nums[end as usize];
                nums[end as usize] = tmp_value;
                start +=1;
                end -= 1;
            }
        }
        let length = nums.len();   
        let target_k = k % length as i32;

        if target_k != 0 {
            sub_rotate(nums, 0, length as i32 -1 );
            sub_rotate(nums, 0, target_k-1);
            sub_rotate(nums, target_k, length as i32 -1);

        }
    }
}