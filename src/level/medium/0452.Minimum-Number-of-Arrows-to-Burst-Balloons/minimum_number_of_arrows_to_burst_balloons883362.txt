// https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/solutions/883362/rust-translated-16ms-100/
impl Solution {
    pub fn find_min_arrow_shots(mut points: Vec<Vec<i32>>) -> i32 {
        if points.is_empty() {
            return 0;
        }
        points.sort_by_key(|v| v[1]);
        let mut arrow_pos = points[0][1];
        let mut ans = 1;
        for v in points.iter().skip(1) {
            if arrow_pos >= v[0] {
                continue;
            }
            ans += 1;
            arrow_pos = v[1];
        }
        ans
    }
}

#[cfg(test)]
mod tests {
    use super::*;
    #[test]
    fn test_find_min_arrow_shots() {
        assert_eq!(
            Solution::find_min_arrow_shots(vec![vec![10, 16], vec![2, 8], vec![1, 6], vec![7, 12]]),
            2
        );
    }

    #[test]
    fn test_find_min_arrow_shots_02() {
        assert_eq!(
            Solution::find_min_arrow_shots(vec![vec![1, 2], vec![3, 4], vec![5, 6], vec![7, 8]]),
            4
        );
    }

    #[test]
    fn test_find_min_arrow_shots_03() {
        assert_eq!(
            Solution::find_min_arrow_shots(vec![vec![1, 2], vec![2, 3], vec![3, 4], vec![4, 5]]),
            2
        );
    }
    #[test]
    fn test_find_min_arrow_shots_04() {
        assert_eq!(Solution::find_min_arrow_shots(vec![vec![1, 2]]), 1);
    }
    #[test]
    fn test_find_min_arrow_shots_05() {
        assert_eq!(
            Solution::find_min_arrow_shots(vec![vec![2, 3], vec![2, 3]]),
            1
        );
    }
}