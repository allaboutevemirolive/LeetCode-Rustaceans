// https://leetcode.com/problems/3sum-closest/solutions/269713/rust-o-n-2-solution-0ms/
impl Solution {
    pub fn three_sum_closest(mut nums: Vec<i32>, target: i32) -> i32 {
        if (nums.len() < 3) { return 0; }
        
        nums.sort();
        let mut closestSum: i32 = nums[0] + nums[1] + nums[2];
        for i in 0..nums.len() - 2 {
            let mut left: usize = i + 1;
            let mut right: usize = nums.len() - 1;
            
            while (left < right) {
                let sum = nums[i] + nums[left] + nums[right];
                
                if (sum == target) {
                    return sum;
                } else if ((sum - target).abs() < (closestSum - target).abs()) {
                    closestSum = sum;
                }
                
                if (sum < target) {
                    left += 1;
                } else {
                    right -= 1;
                }
            }
        }
        
        return closestSum;
    }
}