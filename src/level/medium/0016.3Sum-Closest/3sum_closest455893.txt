// https://leetcode.com/problems/3sum-closest/solutions/455893/rust-0ms-solution/
    pub fn three_sum_closest(nums: Vec<i32>, target: i32) -> i32 {
        let mut nums = nums;
        nums.sort();
        let mut diff = std::i32::MAX;
        let mut sum = std::i32::MIN;
        for i in 0..nums.len()-2 {
            let mut left = i+1;
            let mut right = nums.len()-1;
            while left < right {
                
                let curr_sum = nums[i] + nums[left] + nums[right];
                let curr_diff = target - curr_sum;
                
                match curr_diff.cmp(&0) {
                    Ordering::Equal => return curr_sum,
                    Ordering::Greater => {left += 1;},
                    Ordering::Less => { right -= 1; },
                }
                
                if i32::abs(curr_diff) < diff {
                    diff = i32::abs(curr_diff);
                    sum = curr_sum;
                }
                
            }
        }
        sum
    }