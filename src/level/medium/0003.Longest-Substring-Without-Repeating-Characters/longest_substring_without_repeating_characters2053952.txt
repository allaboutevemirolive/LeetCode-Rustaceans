// https://leetcode.com/problems/longest-substring-without-repeating-characters/solutions/2053952/rust-100/
use std::collections::HashMap;

impl Solution {
    pub fn length_of_longest_substring(s: String) -> i32 {
        let mut sub_string : usize = 0 ; 
        let mut sub_string_map : HashMap<u8, usize> = HashMap::with_capacity(s.len());
        let (mut start, mut end ) : (usize, usize) = ( 0, 0); 
        let s_len = s.len();
        let mut len = 0;
        
        while end < s_len {
            match sub_string_map.get(&s.as_bytes()[end]) {
              Some(&idx) => {
                if idx >= start {
                    len = end - start;
                    if sub_string < len {
                        sub_string = len;
                    }
                    start=idx+1;
                }
              },
              None => {}
            };   
            sub_string_map.insert(s.as_bytes()[end], end);
            end+=1;
        }
        len = end - start;
        if sub_string < len {
            sub_string = len; 
        }   

        sub_string as i32 
    } 
}