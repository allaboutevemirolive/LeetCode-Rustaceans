// https://leetcode.com/problems/insertion-sort-list/solutions/920628/rust-oneliner-but-slow/
pub fn insertion_sort_list(head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
    head.map(|mut head| {
        let mut curr = head.as_mut() as *mut ListNode;
        unsafe {
            while let Some(curr_next) = (*curr).next.as_mut() {
                if curr_next.val < head.val {
                    std::mem::swap(&mut curr_next.val, &mut head.val);
                }
                curr = curr_next.as_mut() as *mut ListNode;
            }
        }
        Box::new(ListNode {
            val: head.val,
            next: Solution::insertion_sort_list(head.next),
        })
    })
}