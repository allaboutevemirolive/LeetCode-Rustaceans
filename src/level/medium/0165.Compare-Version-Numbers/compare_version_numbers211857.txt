// https://leetcode.com/problems/compare-version-numbers/solutions/211857/rust-solution/
use std::cmp::min;
impl Solution {
    pub fn compare_version(version1: String, version2: String) -> i32 {
        let v1 = version1.split(".").collect::<Vec<&str>>();
        let v2 = version2.split(".").collect::<Vec<&str>>();
        
        for (a, b) in v1.iter().zip(v2.iter()) {
            let a_i = a.parse::<i32>().unwrap_or(0);
            let b_i = b.parse::<i32>().unwrap_or(0);
            if a_i < b_i {
                return -1;
            }
            if a_i > b_i {
                return 1;
            }
        }
        let l1 = v1.len();
        let l2 = v2.len();
        
        let mut remain;
        let mut rtn = 0;
        if l1 < l2 {
            rtn = -1;
            remain = v2;
        } else if l1 > l2 {
            rtn = 1;
            remain = v1;
        } else {
            return rtn;
        }
        for i in remain.iter().skip(min(l2 as i32, l1 as i32) as usize) {
             if i.parse::<i32>().unwrap_or(0) != 0 {
                 return rtn;
            }
        }
        return 0;
    }
}