// https://leetcode.com/problems/container-with-most-water/solutions/220017/rust-4-ms/
impl Solution {
    pub fn max_area(height: Vec<i32>) -> i32 {
        let (mut start, mut end) = (0_usize, (height.len() - 1));
        let mut max: i32 = (end - start) as i32 * Solution::min(height[start], height[end]);
        let mut curr_area: i32 = 0;
        while end - start > 1 {
            // move the lower one
            if height[start] < height[end] {
                start += 1;
                if height[start] < height[start - 1] { continue }
            } else {
                end -= 1;
                if height[end] < height[end + 1] { continue }
            }
            curr_area = (end - start) as i32 * Solution::min(height[start], height[end]);
            if curr_area > max { max = curr_area }
        }
        max
    }

    #[inline(always)]
    fn min(i: i32, j: i32) -> i32 {
        if i > j { j } else { i }
    }
}