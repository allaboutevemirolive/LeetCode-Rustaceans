// https://leetcode.com/problems/rotate-list/solutions/436475/rust-o-n-time-o-1-space/
impl Solution {
    pub fn rotate_right(mut head: Option<Box<ListNode>>, k: i32) -> Option<Box<ListNode>> {
        if head.is_none() {
            return head;
        }
        let mut cnt = 0;
        let mut th = &head;
        while th.is_some() {
            th = &th.as_ref().unwrap().next;
            cnt += 1;
        }
        let k = k % cnt;
        if k < 1 {
            return head;
        }
        let p = cnt - k;
        let mut th = &mut head;
        for _ in 0..p-1 {
            th = &mut th.as_mut().unwrap().next;
        }
        let mut new_head = th.as_mut().unwrap().next.take();
        let mut ref_new = &mut new_head;
        while ref_new.is_some() && ref_new.as_ref().unwrap().next.is_some() {
            ref_new = &mut ref_new.as_mut().unwrap().next;
        }
        ref_new.as_mut().map(|x| x.next = head);

        new_head
    }
}