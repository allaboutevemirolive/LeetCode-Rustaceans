// https://leetcode.com/problems/multiply-strings/solutions/2499309/rust-solution/
impl Solution {
    pub fn multiply(num1: String, num2: String) -> String {
        let mut s = num1.chars().map(|v| v as u8 - '0' as u8).collect::<Vec<u8>>();
        let mut t = num2.chars().map(|v| v as u8 - '0' as u8).collect::<Vec<u8>>();
        s.reverse();
        t.reverse();

        let mut memo = vec![0;1000];

        for i in 0..s.len() {
            for j in 0..t.len() {
                let v = s[i] * t[j] + memo[i+j];
                let nv = v / 10;
                let bv = v % 10;
                memo[i+j] = bv;
                memo[i+j+1] += nv;
            }
        }

        for i in 0..memo.len() {
            if 10 <= memo[i] {
                memo[i+1] += memo[i] / 10;
                memo[i] = memo[i] % 10;
            }
        }

        while !memo.is_empty() && memo[memo.len()-1] == 0 {
            memo.pop();
        }

        if memo.is_empty() {
            return String::from("0")
        }

        memo.reverse();
        memo.into_iter().map(|v| v.to_string()).collect::<String>()
    }
}