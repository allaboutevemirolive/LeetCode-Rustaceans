// https://leetcode.com/problems/reorder-list/solutions/2052938/rust-8ms-deque-solution/
use std::collections::VecDeque;
impl Solution {
    /*
        first_node: => [2,   3,   4]
                        ^         ^
            pop_front() |         |
                                 pop_back()
                                
                                
    */
    pub fn reorder_list(mut head: &mut Option<Box<ListNode>>) {
        let mut deque = VecDeque::new();
        //  Start at the first node 
        let mut first_node = head.as_mut().unwrap().next.take();
        //  Insert All values inside the Deque
        while let Some(mut node) = first_node { 
            first_node = node.next.take();
            deque.push_back(Some(node));
        } 
        while !deque.is_empty() { 
            //  Set the next value to be the last value
            if let Some(last) = deque.pop_back() { 
                head.as_mut().unwrap().next = last;
                head = &mut head.as_mut().unwrap().next 
            }
            //  Set the next value to the next value
            if let Some(next) = deque.pop_front() { 
                head.as_mut().unwrap().next = next;
                head = &mut head.as_mut().unwrap().next 
            } 
        }
    }
}