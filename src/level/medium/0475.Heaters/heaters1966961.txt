// https://leetcode.com/problems/heaters/solutions/1966961/rust-binary-search/
impl Solution {
    pub fn find_radius(houses: Vec<i32>, mut heaters: Vec<i32>) -> i32 {
        heaters.sort();
        let mut res = 0;
        for h in houses.iter() {
            let dist = match heaters.binary_search(h) {
                Ok(_) => 0,
                Err(index) => {
                    if index == 0 {
                        (heaters[0] - *h).abs()
                    } else if index == heaters.len() {
                        (heaters[index - 1] - *h).abs()
                    } else {
                        let left = (heaters[index - 1] - *h).abs();
                        let right = (heaters[index] - *h).abs();
                        std::cmp::min(left, right)
                    }
                }
            };

            res = std::cmp::max(res, dist);
        }
        res
    }
}
