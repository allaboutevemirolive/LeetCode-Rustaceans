// https://leetcode.com/problems/utf-8-validation/solutions/2570926/rust-3ms-100-faster/
use std::slice::Iter;

impl Solution {
    pub fn valid_utf8(data: Vec<i32>) -> bool {
        let values: Vec<u8> = data.into_iter()
            .map(|x| x as u8)
            .collect();
        
        let mut iter = values.iter();


        let mut validate = |i: &mut Iter<u8>, n| -> bool {
            for _ in 0..n {
                if let Some(n) = i.next() {
                    if (n & 0xC0) != 0x80 {
                        return false;
                    }
                } else {
                    return false;
                }
            }
            true
        };

        while let Some(&head) = iter.next() {
            match head {
                head if (head & 0x80) == 0x00 => {
                },
                head if (head & 0xE0) == 0xC0 => {
                    if !validate(&mut iter, 1) {
                        return false;
                    }
                },
                head if (head & 0xF0) == 0xE0 => {
                    if !validate(&mut iter, 2) {
                        return false;
                    }
                },
                head if (head & 0xF8) == 0xF0 => {
                    if !validate(&mut iter, 3) {
                        return false;
                    }
                },
                _ => {
                    return false;
                }
            };
        }

        true
    }
}
