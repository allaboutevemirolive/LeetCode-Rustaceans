// https://leetcode.com/problems/utf-8-validation/solutions/2572449/rust-bit-manipulation/
impl Solution {
    pub fn valid_utf8(data: Vec<i32>) -> bool {
        let mut index: usize = 0;
        let num_total_bytes = data.len();
        
        while index < num_total_bytes {
            let cur_num = data[index];
            
            let msb = cur_num & (1 << 7);
            if msb == 0 {
                index += 1;
            } else {
                let mut num_bytes = 0;
                
                for i in 0..7 {
                    let bit = cur_num & (1 << (7 - i));
                    if bit != 0 {
                        num_bytes += 1;
                    } else {
                        break;
                    }
                }
                
                if num_bytes == 1 || num_bytes > 4 {
                    return false;
                }
                                
                
                let mut num_read_bytes = 1;
                
                while num_read_bytes < num_bytes {
                    index += 1;
                    if index >= num_total_bytes {
                        return false;
                    }
                    
                    let cur_num = data[index];
                    
                    if (cur_num & (1 << 7)) != (1 << 7) {
                        return false;
                    }
                    num_read_bytes += 1;
                }
                
                index += 1;
            }
        }
        true
    }
}