// https://leetcode.com/problems/unique-binary-search-trees/solutions/207746/0ms-in-rust/
fn f(n: i32) -> i32 {
    if n < 3 { return n; }
    let n = n as usize;

    let mut v = vec![0i32; n + 1];
    v[0] = 0;
    v[1] = 1;
    v[2] = 2;

    for i in 3..(n + 1) {
        v[i] = v[i - 1] * 2;

        for l in 1..(i - 1) {
            v[i] += v[l] * v[i - 1 - l];
        }
    }

    v[n]
}


impl Solution {
    pub fn num_trees(n: i32) -> i32 {
        f(n)
    }
}