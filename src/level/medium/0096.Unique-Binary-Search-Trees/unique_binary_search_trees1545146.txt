// https://leetcode.com/problems/unique-binary-search-trees/solutions/1545146/rust-dp-solution/
impl Solution {
    pub fn num_trees(n: i32) -> i32 {
        // There is exactly one way to arrange zero nodes in a BST
        let mut memo = vec![1];
        // i is 0-based. memo[i] represents the number of BST made of n nodes
        for i in 1..=(n as usize) {
            memo.push((0..i).map(|j| memo[j] * memo[i - j - 1]).sum());
        }
        memo[n as usize]
    }
}