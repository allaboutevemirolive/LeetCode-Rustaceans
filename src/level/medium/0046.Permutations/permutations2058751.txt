// https://leetcode.com/problems/permutations/solutions/2058751/rust-dfs/
impl Solution {
    pub fn permute(nums: Vec<i32>) -> Vec<Vec<i32>> {
        fn dfs(nums:&Vec<i32>, cur:&mut Vec<i32>, res: &mut Vec<Vec<i32>>){
            if cur.len() == nums.len(){
                res.push(cur.clone());
                return;
            }
            for i in 0..nums.len(){
                let n = nums[i];
                if cur.contains(&n){
                    continue;
                }
                cur.push(n);
                dfs(nums, cur, res);
                cur.pop();
            }
        }
        let mut res = vec![];
        dfs(&nums, &mut vec![], &mut res);
        res
    }
}