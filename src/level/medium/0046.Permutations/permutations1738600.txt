// https://leetcode.com/problems/permutations/solutions/1738600/rust-0ms/
impl Solution {
    pub fn permute(nums: Vec<i32>) -> Vec<Vec<i32>> {
        let mut dp = vec![];
        let mut result = vec![];
        let n = nums.len() as i32;
        let mut state = vec![false; n as usize];
        Solution::solve(&nums, &mut state, &mut result, &mut dp, n);
        result
    }
    
    fn solve(
        nums: &Vec<i32>, 
        state: &mut Vec<bool>, 
        result: &mut Vec<Vec<i32>>,
        dp: &mut Vec<i32>,
        n: i32
    ) {
        if dp.len() as i32 == n {
            result.push(dp.to_vec());
            return;
        }
        
        for (i, &e) in nums.iter().enumerate() {
            if !state[i] {
                state[i] = true;
                dp.push(e);
                Solution::solve(nums, state, result, dp, n);
                state[i] = false;
                dp.pop();
            }
        }
    }
}