// https://leetcode.com/problems/permutations/solutions/1888271/rust-recursion/
pub fn permute(nums: Vec<i32>) -> Vec<Vec<i32>> {
    if nums.is_empty() {
        return vec![vec![]];
    }

    nums.iter()
        .flat_map(|x| {
            let new_nums: Vec<i32> = nums.clone().into_iter().filter(|y| *y != *x).collect();

            permute(new_nums)
                .into_iter()
                .map(|mut v| {
                    v.insert(0, *x);
                    v
                })
                .collect::<Vec<Vec<i32>>>()
        })
        .collect()
}