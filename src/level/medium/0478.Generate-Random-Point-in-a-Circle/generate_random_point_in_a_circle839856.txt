// https://leetcode.com/problems/generate-random-point-in-a-circle/solutions/839856/rust-translated-24ms-100/
use rand::prelude::*;

#[derive(Debug)]
struct Solution {
    rng: ThreadRng,
    radius: f64,
    x_center: f64,
    y_center: f64,
}

impl Solution {
    fn new(radius: f64, x_center: f64, y_center: f64) -> Self {
        Solution {
            rng: Default::default(),
            radius,
            x_center,
            y_center
        }
    }

    fn rand_point(&mut self) -> Vec<f64> {
        let r = f64::sqrt(self.rng.gen_range(0.0, 1.0)) * self.radius;
        let theta = 2.0 * self.rng.gen_range(0.0, std::f64::consts::PI);
        vec![self.x_center + r * f64::cos(theta), self.y_center + r * f64::sin(theta)]
    }
}