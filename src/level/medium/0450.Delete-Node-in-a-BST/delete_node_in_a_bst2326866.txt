// https://leetcode.com/problems/delete-node-in-a-bst/solutions/2326866/c-rust-recursive/
class Solution {
public:
	TreeNode* deleteNode(TreeNode* root, int key) {
		if(!root)return root;
		if(root->val == key){
			if(!root->left && !root->right){
				delete root;
				return NULL;
			}else if(root->left && !root->right){
				TreeNode* t = root->left;
				delete root;
				return t;
			}else if(!root->left && root->right){
				TreeNode* t = root->right;
				delete root;
				return t;
			}else{
				int mini = min_root(root->right)->val;
				root->val = mini;
				root->right = deleteNode(root->right, mini);
				return root;
			}
		}else if(root->val > key){
			root->left = deleteNode(root->left, key);
			return root;
		}else{
			root->right = deleteNode(root->right, key);
			return root;
		}
	}
	TreeNode* min_root(TreeNode* root){
		TreeNode* temp = root;
		while(root->left)temp = root->left, root=root->left;
		return temp;
	} 
};