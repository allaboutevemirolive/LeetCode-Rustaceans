// https://leetcode.com/problems/triangle/solutions/329150/clear-rust-solution/
impl Solution {
    pub fn minimum_total(triangle: Vec<Vec<i32>>) -> i32 {
        if triangle.len() == 0 {
            return 0;
        }

        // O(n) extra space
        // This cache storage minimum sum of below lines
        let mut dp = vec![0i32; triangle.len()];

        for line in triangle.iter().rev() {
            // plus numbers of current line to cache
            dp.iter_mut()
                .zip(line)
                .for_each(|(a, b)| *a += *b);

            // get the smallest number for next line
            for i in 0..line.len() - 1 {
                dp[i] = dp[i].min(dp[i + 1]);
            }
        }

        dp[0]
    }
}