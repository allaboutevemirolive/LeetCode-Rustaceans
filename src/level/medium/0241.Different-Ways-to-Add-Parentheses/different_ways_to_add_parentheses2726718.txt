// https://leetcode.com/problems/different-ways-to-add-parentheses/solutions/2726718/rust-solution-runtime-0-ms-faster-than-100-00/
impl Solution {
    pub fn diff_ways_to_compute(expression: String) -> Vec<i32> {
        let mut v1:Vec<i32> = Vec::new();
    
        for (i,s) in expression.chars().enumerate(){
            if s == '+' || s == '-' || s == '*'{
                let left = Solution::diff_ways_to_compute((&expression[0..i]).to_string());
                let right = Solution::diff_ways_to_compute((&expression[i+1..]).to_string());
                for x in left.iter(){
                    for y in right.iter(){
                        match s{
                            '+' => v1.push(x+y),
                            '-' => v1.push(x-y),
                            '*' => v1.push(x*y),
                            _ => {}
                        }
                    }
                }
            }
        }
        if v1.is_empty(){
            v1.push(expression.parse::<i32>().unwrap())
        }
        return v1
    }
}