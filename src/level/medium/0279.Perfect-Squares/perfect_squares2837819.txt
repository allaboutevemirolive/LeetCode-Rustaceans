// https://leetcode.com/problems/perfect-squares/solutions/2837819/bad-rust-caching/
static mut cache: [i32; 10001] = [10001; 10001];

impl Solution {
    pub fn num_squares(n: i32) -> i32 {
        unsafe {
            if cache[0] != 0 {
                Self::gen_cache();
            }
            cache[n as usize]
        }
    }

    fn gen_cache() {
        unsafe { cache[0] = 0; }
        for i in 1..=100 {
            let sqr = i * i;
            for j in sqr..=10000 {
                unsafe {
                    cache[j] = cache[j].min(cache[j - sqr] + 1);
                }
            }
        }
    }
}