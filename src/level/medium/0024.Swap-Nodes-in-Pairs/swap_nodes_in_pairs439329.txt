// https://leetcode.com/problems/swap-nodes-in-pairs/solutions/439329/rust-solution/
impl Solution {
    pub fn swap_pairs(mut head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        let (mut i, n) = (0, 2);
        let mut dummy = Some(Box::new(ListNode::new(-1)));
        let mut refdummy = &mut dummy;
        while let Some(mut node) = head {
            head = node.next.take();
            node.next = refdummy.as_mut().unwrap().next.take();
            refdummy.as_mut().unwrap().next = Some(node);
            i += 1;
            if i == n {
                while refdummy.as_ref().unwrap().next.is_some() {
                    refdummy = &mut refdummy.as_mut().unwrap().next;
                }
                i = 0;
            }
        }

        dummy.unwrap().next
    }
}
