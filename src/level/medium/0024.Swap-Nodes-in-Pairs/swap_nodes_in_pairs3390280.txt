// https://leetcode.com/problems/swap-nodes-in-pairs/solutions/3390280/my-iterative-solution-in-rust/
pub fn swap_pairs(head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
    let mut holder = ListNode::new(0);
    let mut tail = &mut holder;
    let mut cur = head;
    while let Some (mut node1) = cur.take() {
        match node1.next.take() {
            None =>
                tail = tail.next.insert(node1),
            Some(mut node2) => {
                cur = node2.next.take();
                tail = tail.next.insert(node2).next.insert(node1);
            }
        }
    }
    holder.next
}