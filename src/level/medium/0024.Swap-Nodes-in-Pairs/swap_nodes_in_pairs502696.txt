// https://leetcode.com/problems/swap-nodes-in-pairs/solutions/502696/rust-0ms-2-1mb-without-recursion/
pub fn swap_pairs(head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        let mut root = Box::new(ListNode {val:0,next:head});
        let mut tail = &mut root;
        loop {
            let mut front = if tail.next.is_none() {
                break;
            } else {
                tail.next.take().unwrap()
            };
            let mut back = if front.next.is_none() {
                tail.next = Some(front);
                break;
            } else {
                front.next.unwrap()
            };
            front.next = back.next.take();
            back.next = Some(front);
            tail.next = Some(back);
            tail = tail.next.as_mut().unwrap();
            tail = tail.next.as_mut().unwrap();
        }
        root.next
    }