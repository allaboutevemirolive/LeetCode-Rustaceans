// https://leetcode.com/problems/validate-binary-search-tree/solutions/1498633/rust-inorder-traversal/

pub fn is_valid_bst(root: Option<Rc<RefCell<TreeNode>>>) -> bool {
    match root {
        None => false,
        Some(root) => {
            let mut last = None;
            inorder(root, &mut last)
        }
    }
}

fn inorder(root: Rc<RefCell<TreeNode>>, last_value: &mut Option<i32>) -> bool {
    let root = root.borrow();

    if let Some(left) = root.left.clone() {
        if !inorder(left, last_value) {
            return false;
        }
    }

    if let Some(last) = last_value.replace(root.val) {
        if last >= root.val {
            return false;
        }
    }

    if let Some(right) = root.right.clone() {
        if !inorder(right, last_value) {
            return false;
        }
    }

    true
}