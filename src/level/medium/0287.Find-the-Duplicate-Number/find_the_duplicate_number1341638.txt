// https://leetcode.com/problems/find-the-duplicate-number/solutions/1341638/floyds-in-rust/
impl Solution {
    pub fn find_duplicate(nums: Vec<i32>) -> i32 {
        // meet at (S - d % S), and the rest is d % S,
        // then since d - d % S == N * S (N == 0 if d < S),
        // we can start from meet point
        
        let mut slow = nums[0] as i32;
        let mut fast = nums[0] as i32;

        loop {
            slow = nums[slow as usize];
            fast = nums[nums[fast as usize] as usize];
            if slow == fast {
                break;
            }
        }

        let mut result = nums[0];
        // move slow
        while slow != result {
            slow = nums[slow as usize];
            result = nums[result as usize];
        }

        result
    }
}